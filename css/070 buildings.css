
.building {
    width: calc(var(--building-width) * var(--scale));
    height: calc(var(--building-height) * var(--scale));
    background-size: calc(var(--building-width) * var(--building-spritesheet-columns) * var(--scale)) calc(var(--building-height) * var(--building-spritesheet-rows) * var(--scale));
    background-image: url('img/buildings_v3.jpg');
    border-radius: calc(14px * var(--scale));
    box-shadow: calc(var(--scale) * 5px) calc(var(--scale) * 5px) calc(var(--scale) * 5px) 0 rgba(0, 0, 0, 0.4),
    inset 0 0 0 calc(var(--scale) * 1px) #00000060;
    display: inline-block;
    position: relative;
}

.building_header_small {
    width: var(--building-small-width);
    height: var(--building-header-small-height);
    background-size: calc(var(--building-width) * var(--building-spritesheet-columns) * var(--building-small-scale)) calc(var(--building-height) * var(--building-spritesheet-rows) * var(--building-small-scale));
    border-radius: var(--small-border-radius);
    box-shadow: 0 0 calc(var(--scale) * 3px) calc(var(--scale) * 1px) rgba(0, 0, 0, 0.4),
    inset 0 0 0 calc(var(--scale) * 0.5px) #00000060;
    display: block;
    position: relative; /* For the sliding animation (draftpool to player area) to work */
    z-index: 15; /* So they are on top of the draftpool buildings during animation */
}

.building_header_small_container {
    width: var(--building-small-width);
    height: var(--building-header-small-height);
    display: block;
    position: relative;
}

/* Put some margin between borders, mostly to prevent misclicks on mobile. Doesn't include current_player_is_active / state so the position stays the same during the animation.
Because of reversing the flexbox order for the opponent there are 2 different rules.*/
.player_buildings.me .player_building_column.red_border .building_header_small_container:not(:last-child) {
    margin-bottom: calc(2 * var(--gutter));
}

.player_buildings.opponent .player_building_column.red_border {
    gap: calc(2 * var(--gutter));
}

.current_player_is_active #swd[data-state=chooseOpponentBuilding] .player_building_column.red_border .building_header_small {
    cursor: pointer;
}

.current_player_is_active #swd[data-state=placeSnakeToken] .player_building_column.red_border .building_header_small {
    cursor: pointer;
}

.current_player_is_active #swd[data-state=playerTurn] #draftpool .building_small.available {
    cursor: pointer;
}

.current_player_is_active #swd[data-state=constructLastRowBuilding] #draftpool .row1.red_border {
    cursor: pointer;
}

.current_player_is_active #swd[data-state=takeBuilding] .player_building_column.red_border .building_header_small {
    cursor: pointer;
}

#swd[data-state=takeBuilding] .player_building_column.Brown {
    position: relative;
    left: -5px;
}
#swd[data-state=takeBuilding] .player_building_column.Grey {
    position: relative;
    left: 5px;
}

.current_player_is_active #swd[data-state=swapBuilding] .player_building_column.red_border .building_header_small {
    cursor: pointer;
}

#swd[data-state=swapBuilding] .player_building_column.Blue {
    position: relative;
    left: -5px;
}
#swd[data-state=swapBuilding] .player_building_column.Green {
    position: relative;
    left: 5px;
}

.building_small {
    width: var(--building-small-width);
    height: var(--building-small-height);
    background-size: calc(var(--building-width) * var(--building-spritesheet-columns) * var(--building-small-scale)) calc(var(--building-height) * var(--building-spritesheet-rows) * var(--building-small-scale));
    border-radius: var(--small-border-radius);
    box-shadow: 0 0 calc(var(--scale) * 3px) calc(var(--scale) * 1px) rgba(0, 0, 0, 0.4),
    inset 0 0 0 calc(var(--scale) * 0.5px) #00000060;
    text-align: center;
    backface-visibility: hidden;
}

.age1_back {
    background-position: -300% -700%;
}

.age2_back {
    background-position: -400% -700%;
}

.age3_back {
    background-position: -500% -700%;
}

.guild_back {
    background-position: -600% -700%;
}

.linked_building_icon {
    background-image: url('img/linked-building-icons.png');
    width: calc(var(--scale) * var(--element-scale) * var(--linked-building-icon-width));
    height: calc(var(--scale) * var(--element-scale) * var(--linked-building-icon-height));
    background-size: calc(var(--linked-building-icon-spritesheet-width) * var(--scale) * var(--element-scale)) calc(var(--linked-building-icon-spritesheet-height) * var(--scale) * var(--element-scale));
    display: inline-block;
}

.linked_building_icon_small {
    width: calc(var(--linked-building-icon-width) * var(--linked-building-icon-small-scale));
    height: calc(var(--linked-building-icon-height) * var(--linked-building-icon-small-scale));
    background-size: calc(var(--linked-building-icon-spritesheet-width) * var(--linked-building-icon-small-scale)) calc(var(--linked-building-icon-spritesheet-height) * var(--linked-building-icon-small-scale));
    border-radius: calc(var(--scale) * 2px);
    position: absolute;
    left: calc(var(--building-small-width) * 0.54);
    top: calc(var(--scale) * 16px);
    z-index: 2;
    filter: drop-shadow(0px 0px calc(var(--scale) * 1px) #00000060);
}

.opponent .linked_building_icon_small {
    top: calc(var(--scale) * -7px);
}

/**
 *------
 * BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
 * SevenWondersDuel implementation : © Koen Heltzel <koenheltzel@gmail.com>
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * sevenwondersduel.css
 *
 * SevenWondersDuel stylesheet
 *
 */

/*
    This is the CSS stylesheet of your game User Interface.
    
    Styles defined on this file will be applied to the HTML elements you define in your
    HTML template (sevenwondersduel_sevenwondersduel.tpl), and to HTML elements you create dynamically
    (in sevenwondersduel.js).
    
    Usually, you are using CSS to:
    
    1°) define the overall layout of your game
        (ex: place the board on the top left, place player's hand beside, place the deck on the right, ...).

    2°) create your CSS-sprites:
        All images of your games should be gathered into a small number of image files. Then, using
        background-image and background-position CSS properties, you create HTML blocks that can 
        display these images correctly (see example below).
    
    3°) ... anything else:
        It is really easy to add and remove CSS classes dynamically from your Javascript with
        dojo.addClass and dojo.removeClass. It is also easy to check if an element has a class
        (dojo.hasClass) or to get all elements with a specific class (dojo.query). This is why,
        very often, using CSS classes for the logic of your user interface allow you to do complex
        thing easily.
        
        
     Note: on the production platform, this file will be compressed and comments will be removed.
           Consequently, don't hesitate to put as many comments as necessary.
*/


/* Note: you must not use any @import directive */


/********* You can start writing your CSS below this line: **********/


/*
__     __         _       _     _
\ \   / /_ _ _ __(_) __ _| |__ | | ___  ___
 \ \ / / _` | '__| |/ _` | '_ \| |/ _ \/ __|
  \ V / (_| | |  | | (_| | |_) | |  __/\__ \
   \_/ \__,_|_|  |_|\__,_|_.__/|_|\___||___/
*/

:root {
    --scale: 1.0;
    --element-scale: 1.0;
    --gutter: calc(7.5px * var(--scale));

    --building-spritesheet-width: 1992px;
    --building-spritesheet-height: 1792px;
    --building-spritesheet-columns: 12;
    --building-spritesheet-rows: 7;
    --building-spritesheet-scale: 1.253; /* Had to make the spritesheet smaller to support the @2X version at 4096 pixels high. */
    --building-width: calc(var(--building-spritesheet-width) / var(--building-spritesheet-columns) * var(--building-spritesheet-scale));
    --building-height: calc(var(--building-spritesheet-height) / var(--building-spritesheet-rows) * var(--building-spritesheet-scale));
    --building-small-scale: calc(0.5 * var(--scale));
    --building-small-width: calc(var(--building-width) * var(--building-small-scale));
    --building-small-height: calc(var(--building-height) * var(--building-small-scale));
    --building-header-small-height: calc(62px * var(--building-small-scale));
    --building-columns-count: 7;

    --wonder-spritesheet-width: 1845px;
    --wonder-spritesheet-height: 720px;
    --wonder-spritesheet-columns: 5;
    --wonder-spritesheet-rows: 3;
    --wonder-width: calc(var(--wonder-spritesheet-width) / var(--wonder-spritesheet-columns));
    --wonder-height: calc(var(--wonder-spritesheet-height) / var(--wonder-spritesheet-rows));
    --wonder-border-radius: 15px;
    --wonder-small-scale: calc(0.58 * var(--scale));
    --wonder-plus-age-card-scale: 1.1;

    --conspiracy-spritesheet-width: 1440px;
    --conspiracy-spritesheet-height: 1107px;
    --conspiracy-spritesheet-columns: 6;
    --conspiracy-spritesheet-rows: 3;
    --conspiracy-width: calc(var(--conspiracy-spritesheet-width) / var(--conspiracy-spritesheet-columns));
    --conspiracy-height: calc(var(--conspiracy-spritesheet-height) / var(--conspiracy-spritesheet-rows));
    --conspiracy-compact-height: calc(var(--conspiracy-spritesheet-height) / var(--conspiracy-spritesheet-rows) * (140/369));
    --conspiracy-border-radius: 15px;
    --conspiracy-small-scale: calc(0.58 * var(--scale));
    --conspiracy-plus-age-card-scale: 1.25;

    --progress-token-spritesheet-width: 800px;
    --progress-token-spritesheet-height: 800px;
    --progress-token-spritesheet-columns: 4;
    --progress-token-spritesheet-rows: 4;
    --progress-token-width: calc(var(--progress-token-spritesheet-width) / var(--progress-token-spritesheet-columns));
    --progress-token-height: calc(var(--progress-token-spritesheet-height) / var(--progress-token-spritesheet-rows));
    --progress-token-small-scale: calc(0.4 * (0.5 / 0.63) * var(--scale)); /* (0.5 / 0.63) Because board used to be scale 0.63 and now is 0.5 */

    --decree-spritesheet-width: 696px;
    --decree-spritesheet-height: 537px;
    --decree-spritesheet-columns: 6;
    --decree-spritesheet-rows: 3;
    --decree-width: calc(var(--decree-spritesheet-width) / var(--decree-spritesheet-columns));
    --decree-height: calc(var(--decree-spritesheet-height) / var(--decree-spritesheet-rows));
    --decree-small-scale: calc(0.4 * var(--senate-scale)); /* (0.5 / 0.63) Because board used to be scale 0.63 and now is 0.5 */

    --linked-building-icon-spritesheet-width: 288px;
    --linked-building-icon-spritesheet-height: 64px;
    --linked-building-icon-spritesheet-columns: 9;
    --linked-building-icon-spritesheet-rows: 2;
    --linked-building-icon-width: calc(var(--linked-building-icon-spritesheet-width) / var(--linked-building-icon-spritesheet-columns));
    --linked-building-icon-height: calc(var(--linked-building-icon-spritesheet-height) / var(--linked-building-icon-spritesheet-rows));
    --linked-building-icon-small-scale: calc(0.45 * var(--scale));

    --board-width: 268px;
    --board-height: 949px;
    --board-scale: calc(0.75 * var(--scale));
    --military-token-scale: calc(0.5 * var(--scale));

    --senate-width: 220px;
    --senate-height: 949px;
    --senate-scale: calc(0.75 * var(--scale));

    --small-border-radius: calc(7px * var(--scale));

    --draftpool-row-height-multiplier: 0.536;
    --draftpool-column-width: calc(var(--building-width) * var(--building-small-scale) * 0.58);
    --draftpool-row-height: calc(var(--building-height) * var(--building-small-scale) * var(--draftpool-row-height-multiplier));
    --draftpool-column-count: 11;

    --military-track-header: 0.0434;
    --military-track-body: 0.87;
    --conflict-pawn-position: 0; /* -9 to 9 */

    --list-of-cards-scale: calc(var(--scale) * 0.75);
}

#swd[data-agora="1"] {
    --building-columns-count: 8;
    --draftpool-column-count: 13;
}

#swd[data-agora="0"] .agora {
    display: none;
}

/*
  ____                           _
 / ___| ___ _ __   ___ _ __ __ _| |
| |  _ / _ \ '_ \ / _ \ '__/ _` | |
| |_| |  __/ | | |  __/ | | (_| | |
 \____|\___|_| |_|\___|_|  \__,_|_|
 */

/* font converted using font-converter.net. thank you! */
@font-face {
    font-family: "PossumSaltareNF";
    src: url("img/PossumSaltareNF.eot"); /* IE9 Compat Modes */
    src: url("img/PossumSaltareNF.eot?#iefix") format("embedded-opentype"), /* IE6-IE8 */ url("img/PossumSaltareNF.otf") format("opentype"), /* Open Type Font */ url("img/PossumSaltareNF.svg") format("svg"), /* Legacy iOS */ url("img/PossumSaltareNF.ttf") format("truetype"), /* Safari, Android, iOS */ url("img/PossumSaltareNF.woff") format("woff"), /* Modern Browsers */ url("img/PossumSaltareNF.woff2") format("woff2"); /* Modern Browsers */
    font-weight: normal;
    font-style: normal;
}
/* font converted using font-converter.net. thank you! */
@font-face {
    font-family: "Cafeteria-Black";
    src: url("img/Cafeteria-Black.eot"); /* IE9 Compat Modes */
    src: url("img/Cafeteria-Black.eot?#iefix") format("embedded-opentype"), /* IE6-IE8 */
    url("img/Cafeteria-Black.otf") format("opentype"), /* Open Type Font */
    url("img/Cafeteria-Black.svg") format("svg"), /* Legacy iOS */
    url("img/Cafeteria-Black.ttf") format("truetype"), /* Safari, Android, iOS */
    url("img/Cafeteria-Black.woff") format("woff"), /* Modern Browsers */
    url("img/Cafeteria-Black.woff2") format("woff2"); /* Modern Browsers */
    font-weight: normal;
    font-style: normal;
}

/*html {*/
/*    background-image: none !important;*/
/*    background-color: black;*/
/*}*/

/*.whiteblock {*/
/*    background-image: none !important;*/
/*    !*background: url('https://en.1.studio.boardgamearena.com:8083/data/themereleases/200730-1036/img/layout/back-main.jpg') !important;*!*/
/*    background-color: white;*/
/*}*/
.whiteblock:empty {
    display: none !important;
}

#game_play_area {

}

#game_play_area h3 {
    margin: 0 0 var(--gutter) 0;
    font-size: max(12px, calc(16px * var(--scale)));
}

#game_play_area .whiteblock h3 {
    /* Borrowed from Potion Explosion */
    text-shadow: 1px 1px 1px #FFFFFF;
}

#game_play_area .bgabutton {
    padding: var(--gutter) !important;
}

#game_play_area .bgabutton_darkgray {
    cursor: not-allowed;
}

#game_play_area .whiteblock {
    border-radius: 8px;
    padding: var(--gutter);
    margin: 0;
}

.opponent .coin, .coin.opponent {
    background-image: url('img/sprites.png');
    background-position: 97.1239% 74.7788%;
    background-size: 853.333%;
}

.coin.animated {
    position: absolute;
    z-index: 100;
}

.cost_free {
    font-weight: bold;
}

.resource, .coin {
    background-image: url('img/sprites.png');
    background-position: 40.4867% 94.6903%;
    background-size: 853.333%;

    width: calc(var(--scale) * var(--element-scale) * 30px);
    height: calc(var(--scale) * var(--element-scale) * 30px);

    display: inline-block;
    text-align: center;
    border-radius: calc(var(--scale) * var(--element-scale) * 30px * 0.5);
    box-shadow: calc(var(--scale) * 1px) calc(var(--scale) * 1px) calc(var(--scale) * 3px) 0 rgba(0, 0, 0, 0.4),
    inset 0 0 0 calc(var(--scale) * 1px) #00000060;
    backface-visibility: hidden;
}

.resource > span, .coin > span, .agora_cube3d_me, .agora_cube3d_opponent {
    font-family: "Cafeteria-Black", Roboto, Arial, sans-serif;
    font-size: calc(var(--scale) * var(--element-scale) * 24px);
    line-height: calc(var(--scale) * var(--element-scale) * 30px) !important;
    text-shadow: 0 0 calc(var(--scale) * 3px) white, 0 0 calc(var(--scale) * 3px) white, 0 0 calc(var(--scale) * 3px) white;
    color: black;
    cursor: default;
}

.wood {
    background-image: url('img/sprites.png');
    background-position: 85.8491% 21.6981%;
    background-size: 581.818%;
}

.clay {
    background-image: url('img/sprites.png');
    background-position: 64.6226% 42.9245%;
    background-size: 581.818%;
}

.stone {
    background-image: url('img/sprites.png');
    background-position: 64.6226% 21.6981%;
    background-size: 581.818%;
}

.glass {
    background-image: url('img/sprites.png');
    background-position: 78.7736% 0.471698%;
    background-size: 581.818%;
}

.papyrus {
    background-image: url('img/sprites.png');
    background-position: 21.6981% 79.5294%;
    background-size: 581.818%;
}

.glass, .papyrus {
    border-radius: unset;
    box-shadow: none;
    filter: drop-shadow(0px 0px calc(var(--scale) * 1px) #000000);
}

.current_player_is_active .coin > span {
    cursor: pointer;
}

.point {
    background-image: url('img/sprites.png');
    background-position: 62.5000% 78.6047%;
    background-size: 581.818%;

    width: calc(var(--scale) * var(--element-scale) * 30px);
    height: calc(var(--scale) * var(--element-scale) * 30px);
    text-align: center;
    position: absolute;
    z-index: 10; /* Fly over military track during end game animation */
}

.point > span {
    font-family: "Cafeteria-Black", Roboto, Arial, sans-serif;
    font-size: calc(var(--scale) * var(--element-scale) * 24px);
    line-height: calc(var(--scale) * var(--element-scale) * 30px) !important;
    text-shadow: 0 0 calc(var(--scale) * 3px) black, 0 0 calc(var(--scale) * 3px) black;
    color: white;
    cursor: default;
}

@keyframes glow {
    from {
        box-shadow: 0 0 5px 4px #f1dec8;
    }
    to {
        box-shadow: 0 0 5px 6px #f1dec8;
    }
}

.red_border {
    animation: red_border 0.5s infinite alternate;
    z-index: 20;
}

@keyframes red_border {
    from {
        outline-color: #ff000066;
        outline-width: 3px;
        outline-style: dashed;
        outline-offset: 1px;
    }
    to {
        outline-color: #ff0000;
        outline-width: 3px;
        outline-style: dashed;
        outline-offset: 1px;
    }
}

/*
 _                            _   
| |    __ _ _   _  ___  _   _| |_ 
| |   / _` | | | |/ _ \| | | | __|
| |__| (_| | |_| | (_) | |_| | |_ 
|_____\__,_|\__, |\___/ \__,_|\__|
            |___/                 
 */

#swd_wrap {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

#layout_flexbox {
    /* Use flexbox properties https://www.youtube.com/watch?v=JJSoEo8JSnc */
    display: flex;
    flex-direction: row;
    justify-content: center;
}

#wonder_column {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
}

#wonder_column > div:first-child {
    /* Space between the two player areas with wonders, relevant in square mode where they would otherwise touch. */
    margin-bottom: var(--gutter);
}

#swd_wrap.landscape .player_wonders_container {
    display: flex;
    flex-wrap: wrap;
    flex-direction: column-reverse;
}
#swd_wrap.landscape .player_wonders_container:first-child {
    flex-direction: column;
}

.player_conspiracies {
    display: flex;
    flex-wrap: wrap;

    justify-content: center; /* For portrait layout, but doesn't affect other layouts afaik */
}
.player_conspiracies .conspiracy {
    z-index: 2;
}

.player_conspiracies > div {
    width: calc(var(--conspiracy-width) * var(--conspiracy-small-scale));
    height: calc(var(--conspiracy-compact-height) * var(--conspiracy-small-scale) * var(--conspiracy-plus-age-card-scale));
}

#swd_wrap.landscape .player_conspiracies {
    width: calc(2 * var(--wonder-small-scale) * var(--wonder-width) * var(--wonder-plus-age-card-scale) + 1 * var(--gutter));
    justify-content: flex-end;
}
#swd_wrap.landscape .player_conspiracies.me > div {
    margin-top: var(--gutter);
    margin-left: var(--gutter);
}
#swd_wrap.landscape .player_conspiracies.opponent {
    flex-wrap: wrap-reverse;
}
#swd_wrap.landscape .player_conspiracies.opponent > div {
    margin-bottom: var(--gutter);
    margin-left: var(--gutter);
}

#swd_wrap.square .player_conspiracies {
    flex-direction: column;
    justify-content: flex-start;
}
#swd_wrap.square .player_conspiracies.me > div {
    margin-bottom: var(--gutter);
    margin-right: var(--gutter);
}
#swd_wrap.square .player_conspiracies.opponent {
    justify-content: flex-end;
}
#swd_wrap.square .player_conspiracies.opponent > div {
    margin-top: var(--gutter);
    margin-right: var(--gutter);
}

#swd_wrap.portrait .player_conspiracies.me > div {
    margin-top: var(--gutter);
    margin-right: var(--gutter);
}
#swd_wrap.portrait .player_conspiracies.opponent > div {
    margin-bottom: var(--gutter);
    margin-right: var(--gutter);
}




.card_outline:empty, .card_outline.science_progress {
    box-shadow: inset 0 0 calc(var(--scale) * 4px) calc(var(--scale) * 1px) #00000029;
    border-radius: var(--small-border-radius);
}

.progress_token_outline {
    box-shadow: inset 0 0 calc(var(--scale) * 4px) calc(var(--scale) * 1px) #00000029;
    border-radius: calc(var(--progress-token-width) * var(--progress-token-small-scale) * 0.5);
}


#wonder_selection_block {
    display: none;
}

#swd[data-state=selectWonder] #wonder_selection_block {
    display: block;
}

#wonder_selection_container > div {
    width: calc(var(--wonder-small-scale) * var(--wonder-width));
    height: calc(var(--wonder-small-scale) * var(--wonder-height));
    float: left;
    --wonder-small-scale: calc(0.8 * var(--scale));
}

#wonder_selection_container > div:nth-of-type(1), #wonder_selection_container > div:nth-of-type(2) {
    margin-bottom: var(--gutter);
}

#wonder_selection_container > div:nth-of-type(1), #wonder_selection_container > div:nth-of-type(3) {
    margin-right: var(--gutter);
}

.current_player_is_active #wonder_selection_container .wonder {
    cursor: pointer;
}

#middle_column {
    text-align: center;

    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;

    width: calc(var(--building-columns-count) * var(--building-small-width) + (var(--building-columns-count) - 1) * 2px + 2 * var(--gutter)); /* This keeps content in the middle_column, especially something like select_start_player within the allowed size. */
}

#board_column {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    flex-wrap: wrap;
}

#swd_wrap.portrait #board_column {
    /* Specific width so layout_flexbox becomes the same width as player_wonders_mobile_container_ div. */
    width: calc(220px * var(--scale));
}

#swd_wrap.square #board_column, #swd_wrap.landscape #board_column {
    /* Specific width so layout_flexbox becomes the same width as player_wonders_mobile_container_ div. */
    width: calc(225px * var(--scale));
}

#swd[data-agora="1"] #swd_wrap.portrait #board_column {
    /* Specific width so layout_flexbox becomes the same width as player_wonders_mobile_container_ div. */
    width: calc(395px * var(--scale));
}

#swd[data-agora="1"] #swd_wrap.square #board_column, #swd[data-agora="1"] #swd_wrap.landscape #board_column {
    /* Specific width so layout_flexbox becomes the same width as player_wonders_mobile_container_ div. */
    width: calc(390px * var(--scale));
}

/*
 ____                      _
| __ )  ___   __ _ _ __ __| |
|  _ \ / _ \ / _` | '__/ _` |
| |_) | (_) | (_| | | | (_| |
|____/ \___/ \__,_|_|  \__,_|
 */

#board_container {
    position: relative;
    display: inline-block;
    align-self: flex-end;
}

.board, #board_container {
    width: calc(var(--board-width) * var(--board-scale));
    height: calc(var(--board-height) * var(--board-scale));
}

.board {
    background-image: url('img/board.png');
    background-size: calc(var(--board-width) * var(--board-scale)) calc(var(--board-height) * var(--board-scale));
    /*border-radius: var(--small-border-radius);*/
    filter: drop-shadow(0px 0px calc(var(--scale) * 1.5px) #000000);
    position: absolute;
    display: inline-block;
}

.pawn {
    background-image: url('img/sprites.png');
    background-position: 69.6023% 94.2731%;
    background-size: 320.000%;

    width: calc(var(--scale) * 80px);
    height: calc(var(--scale) * 29px);
    /*background-size: calc(var(--scale) * 80px) calc(var(--scale) * 29px);*/
    left: calc(var(--scale) * 45px);
    top: calc((var(--military-track-header) + (var(--conflict-pawn-position) + 9) / 18 * var(--military-track-body)) * var(--board-height) * var(--board-scale));
    /*border-radius: var(--small-border-radius);*/
    filter: drop-shadow(0px 0px calc(var(--scale) * 1.5px) #000000);
    position: absolute;
    display: inline-block;
    z-index: 3;
}

.capital {
    width: calc(var(--board-scale) * 74px);
    height: calc(var(--board-scale) * 37px);
    position: absolute;
    left: calc(var(--board-scale) * 78px);
}
#capital_opponent {
    top: calc(var(--board-scale) * 44px);
}
#capital_me {
    top: calc(var(--board-scale) * 868px);
}


#board_progress_tokens {
    --element-scale: 1.1;
    position: relative;
    top: calc(var(--board-height) * var(--board-scale) * 0.25);
    left: calc(var(--board-width) * var(--board-scale) * 0.635);
    width: calc(var(--progress-token-width) * var(--progress-token-small-scale) * var(--element-scale));
    height: calc(var(--board-height) * var(--board-scale) * 0.5);
}

#board_progress_tokens > div {
    position: absolute;
    width: calc(var(--progress-token-width) * var(--progress-token-small-scale));
    height: calc(var(--progress-token-width) * var(--progress-token-small-scale));
}

#board_progress_tokens > div:nth-of-type(1) {

}

#board_progress_tokens > div:nth-of-type(2) {
    top: calc(var(--board-height) * var(--board-scale) * 0.10);
}

#board_progress_tokens > div:nth-of-type(3) {
    top: calc(var(--board-height) * var(--board-scale) * 0.20);
}

#board_progress_tokens > div:nth-of-type(4) {
    top: calc(var(--board-height) * var(--board-scale) * 0.30);
}

#board_progress_tokens > div:nth-of-type(5) {
    top: calc(var(--board-height) * var(--board-scale) * 0.40);
}


#military_tokens > div {
    position: absolute;
}

#military_tokens > div:nth-of-type(1) {
    left: calc(var(--board-width) * var(--board-scale) * 0.0825);
    top: calc(var(--board-height) * var(--board-scale) * 0.104);
}

#military_tokens > div:nth-of-type(2) {
    left: calc(var(--board-width) * var(--board-scale) * 0.095);
    top: calc(var(--board-height) * var(--board-scale) * 0.257);
}

#military_tokens > div:nth-of-type(3) {
    left: calc(var(--board-width) * var(--board-scale) * 0.095);
    top: calc(var(--board-height) * var(--board-scale) * 0.643);
}

#military_tokens > div:nth-of-type(4) {
    left: calc(var(--board-width) * var(--board-scale) * 0.0825);
    top: calc(var(--board-height) * var(--board-scale) * 0.778);
}

.military_token {
    filter: drop-shadow(0px 0px calc(var(--scale) * 1.5px) #000000);
    position: relative;
    /*display: inline-block;*/
}

.military_token_2 {
    background-image: url('img/sprites.png');
    background-position: 38.4615% 0.869565%;
    background-size: 419.672%;

    width: calc(var(--military-token-scale) * 61px);
    height: calc(var(--military-token-scale) * 141px);
}

.military_token_5 {
    background-image: url('img/sprites.png');
    background-position: 0.546448% 1.12360%;
    background-size: 350.685%;

    width: calc(var(--military-token-scale) * 73px);
    height: calc(var(--military-token-scale) * 167px);
}

.board_player_left, .board_player_right {
    position: relative;
    display: inline-block;
    top: 40px;
}

.board_player_right {
    float: right;
}

/*
 ____                   _
/ ___|  ___ _ __   __ _| |_ ___
\___ \ / _ \ '_ \ / _` | __/ _ \
 ___) |  __/ | | | (_| | ||  __/
|____/ \___|_| |_|\__,_|\__\___|
 */

#senate_container {
    position: relative;
    display: inline-block;
    align-self: flex-end;
    margin-right: calc(-19px * var(--scale));
    margin-left: calc(var(--scale) * 35px); /* To clear the decrees (with possible double stack) */
}

.senate, #senate_container {
    width: calc(var(--senate-width) * var(--senate-scale));
    height: calc(var(--senate-height) * var(--senate-scale));
}

.senate {
    background-image: url('img/agora_senate.png');
    background-size: calc(var(--senate-width) * var(--senate-scale)) calc(var(--senate-height) * var(--senate-scale));
    filter: drop-shadow(0px 0px calc(var(--scale) * 1.5px) #000000);
    position: absolute;
    display: inline-block;
}

/*
 ____             __ _                     _
|  _ \ _ __ __ _ / _| |_ _ __   ___   ___ | |
| | | | '__/ _` | |_| __| '_ \ / _ \ / _ \| |
| |_| | | | (_| |  _| |_| |_) | (_) | (_) | |
|____/|_|  \__,_|_|  \__| .__/ \___/ \___/|_|
                        |_|
 */

#draftpool_container {
    padding: var(--gutter);
    display: inline-block;
}

.draftpool {
    position: relative;
    left: var(--gutter); /* Happens to be te space we need to center the draftpool */
    margin: calc(2 * var(--gutter)) 0px calc(2.5 * var(--gutter)) 0px;

    /* Height is being set by updateDraftpool */

    /* 5px for rightmost card's shadow, else it will look too narrox. */
    width: calc(var(--draftpool-column-width) * (var(--draftpool-column-count) - 1) + var(--building-small-width) + calc(var(--scale) * 5px));
}

.glow {
    animation: glow 0.5s infinite alternate;
}

.draftpool_building_cost {
    position: relative;
}

.draftpool_building_cost.opponent {
    top: calc(var(--building-height) * var(--building-small-scale) * 0.73);
}

.draftpool_building_cost.me {
    top: calc(var(--building-height) * var(--building-small-scale) * 0.80);
}

.draftpool_building_cost .coin {
    --element-scale: 0.85;
}

#draftpool_actions {
    text-align: center;
    visibility: hidden;
}

#draftpool_actions > a > div {
    margin-right: var(--gutter);
}

#draftpool_actions > a {
    margin: 0;
    height: calc(34px * var(--scale));
    font-size: calc(14px * var(--scale));
    line-height: calc(34px * var(--scale));
}

#buttonConstructWonder {
    float: left;
}

#buttonDiscardBuilding {
    float: right;
}

#buttonDiscardBuilding .coin {
    --element-scale: calc(2.0 - var(--scale));
}

#buttonDiscardBuilding .coin > span {
    font-weight: normal;
}

#draftpool .column1 {
    left: calc(var(--draftpool-column-width) * (1 - 1));
}

#draftpool .column2 {
    left: calc(var(--draftpool-column-width) * (2 - 1));
}

#draftpool .column3 {
    left: calc(var(--draftpool-column-width) * (3 - 1));
}

#draftpool .column4 {
    left: calc(var(--draftpool-column-width) * (4 - 1));
}

#draftpool .column5 {
    left: calc(var(--draftpool-column-width) * (5 - 1));
}

#draftpool .column6 {
    left: calc(var(--draftpool-column-width) * (6 - 1));
}

#draftpool .column7 {
    left: calc(var(--draftpool-column-width) * (7 - 1));
}

#draftpool .column8 {
    left: calc(var(--draftpool-column-width) * (8 - 1));
}

#draftpool .column9 {
    left: calc(var(--draftpool-column-width) * (9 - 1));
}

#draftpool .column10 {
    left: calc(var(--draftpool-column-width) * (10 - 1));
}

#draftpool .column11 {
    left: calc(var(--draftpool-column-width) * (11 - 1));
}

#draftpool .column12 {
    left: calc(var(--draftpool-column-width) * (12 - 1));
}

#draftpool .column13 {
    left: calc(var(--draftpool-column-width) * (13 - 1));
}

#draftpool .row1 {
    top: calc(var(--draftpool-row-height) * (1 - 1));
}

#draftpool .row2 {
    top: calc(var(--draftpool-row-height) * (2 - 1));
}

#draftpool .row3 {
    top: calc(var(--draftpool-row-height) * (3 - 1));
}

#draftpool .row4 {
    top: calc(var(--draftpool-row-height) * (4 - 1));
}

#draftpool .row5 {
    top: calc(var(--draftpool-row-height) * (5 - 1));
}

#draftpool .row6 {
    top: calc(var(--draftpool-row-height) * (6 - 1));
}

#draftpool .row7 {
    top: calc(var(--draftpool-row-height) * (7 - 1));
}

/*
 ____  _             _           _                                  _           _   _
/ ___|| |_ __ _ _ __| |_   _ __ | | __ _ _   _  ___ _ __   ___  ___| | ___  ___| |_(_) ___  _ __
\___ \| __/ _` | '__| __| | '_ \| |/ _` | | | |/ _ \ '__| / __|/ _ \ |/ _ \/ __| __| |/ _ \| '_ \
 ___) | || (_| | |  | |_  | |_) | | (_| | |_| |  __/ |    \__ \  __/ |  __/ (__| |_| | (_) | | | |
|____/ \__\__,_|_|   \__| | .__/|_|\__,_|\__, |\___|_|    |___/\___|_|\___|\___|\__|_|\___/|_| |_|
                          |_|            |___/
 */

#select_start_player {
    display: none;
}

.current_player_is_active #swd[data-state=selectStartPlayer] #select_start_player {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

#select_start_player > .action_button > img {
    margin-right: var(--gutter);
}

#select_start_player > div {
    margin: 0 var(--gutter) 0 var(--gutter);
    word-wrap: break-spaces;
    line-height: calc(18px * var(--scale));
    font-size: calc(16px * var(--scale));
    height: calc(36px * var(--scale));
    display: inline-block;
    max-width: 60%;
    font-weight: bold;
}

#select_start_player > .action_button {
    margin: 0;
    height: calc(34px * var(--scale));
    line-height: calc(34px * var(--scale));
    text-overflow: unset;
}

#buttonPlayerLeft {
    float: left;
}

#buttonPlayerRight {
    float: right;
}

/*
  ____ _                                                                      _        _                 __                       _
 / ___| |__   ___   ___  ___  ___   _ __  _ __ ___   __ _ _ __ ___  ___ ___  | |_ ___ | | _____ _ __    / _|_ __ ___  _ __ ___   | |__   _____  __
| |   | '_ \ / _ \ / _ \/ __|/ _ \ | '_ \| '__/ _ \ / _` | '__/ _ \/ __/ __| | __/ _ \| |/ / _ \ '_ \  | |_| '__/ _ \| '_ ` _ \  | '_ \ / _ \ \/ /
| |___| | | | (_) | (_) \__ \  __/ | |_) | | | (_) | (_| | | |  __/\__ \__ \ | || (_) |   <  __/ | | | |  _| | | (_) | | | | | | | |_) | (_) >  <
 \____|_| |_|\___/ \___/|___/\___| | .__/|_|  \___/ \__, |_|  \___||___/___/  \__\___/|_|\_\___|_| |_| |_| |_|  \___/|_| |_| |_| |_.__/ \___/_/\_\
                                   |_|              |___/
 */

#progress_token_from_box {
    display: none;
}

.current_player_is_active #swd[data-state=chooseProgressTokenFromBox] #progress_token_from_box {
    display: block;
}

#progress_token_from_box_container .progress_token {
    cursor: pointer;
}

#progress_token_from_box_container > div {
    display: inline-block;
    --progress-token-small-scale: calc(0.5 * var(--scale));
    width: calc(var(--progress-token-width) * var(--progress-token-small-scale));
    height: calc(var(--progress-token-height) * var(--progress-token-small-scale));
}

#progress_token_from_box_container > div:not(:last-child) {
    margin-right: var(--gutter);
}

/*
 ____  _                            _
|  _ \| | __ _ _   _  ___ _ __     / \   _ __ ___  __ _
| |_) | |/ _` | | | |/ _ \ '__|   / _ \ | '__/ _ \/ _` |
|  __/| | (_| | |_| |  __/ |     / ___ \| | |  __/ (_| |
|_|   |_|\__,_|\__, |\___|_|    /_/   \_\_|  \___|\__,_|
               |___/
 */

.player_info_sub {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.player_info {
    text-align: center;
}

.player_info.opponent {
    margin-bottom: var(--gutter) !important;
}

.player_info.me {
    margin-top: var(--gutter) !important;
}

#swd_wrap.portrait .player_info.opponent {
    border-radius: 0 0 var(--small-border-radius) 0;
}

#swd_wrap.portrait .player_info.me {
    border-radius: 0 var(--small-border-radius) 0 0;
}

#swd_wrap.square .player_info, #swd_wrap.landscape .player_info {
    border-radius: 0 var(--small-border-radius) var(--small-border-radius) 0;
}

.player_area_name {
    position: relative;
    display: inline-block;
    width: 75%;
    text-align: center;
}

.player_area_name h3 {
    margin: 0 !important;
}

.player_buildings.me {
    align-items: flex-start;
}

.player_buildings {
    min-height: calc(150px * var(--scale));

    width: calc(var(--building-columns-count) * var(--building-small-width) + (var(--building-columns-count) - 1) * 2px);
    /* Flexbox setup */
    display: flex;
    flex-direction: row;
    align-items: flex-end;
    justify-content: space-between;
}

#swd_wrap.square .player_buildings.opponent, #swd_wrap.landscape .player_buildings.opponent {
    border-radius: 0 0 var(--small-border-radius) 0;
}

#swd_wrap.square .player_buildings.me, #swd_wrap.landscape .player_buildings.me {
    border-radius: 0 var(--small-border-radius) 0 0;
}

#swd_wrap.portrait .player_buildings.opponent {
    border-radius: 0 0 var(--small-border-radius) var(--small-border-radius);
}

#swd_wrap.portrait .player_buildings.me {
    border-radius: var(--small-border-radius) var(--small-border-radius) 0 0;
}

.player_building_column {
    display: flex;
    flex-direction: column;
    min-width: var(--building-small-width);
    min-height: var(--building-header-small-height);
    border-radius: var(--small-border-radius);
    background-size: var(--building-small-width) var(--building-header-small-height) !important;
    background-repeat: no-repeat !important;
    background-position: bottom !important;
    margin: 0 1px 0 1px;
    align-items: center; /* To center expansion icons */
}

.player_buildings.opponent .player_building_column {
    background-position: bottom !important;
    flex-direction: column-reverse;
}

.player_buildings.me .player_building_column {
    background-position: top !important;
}

/* Gradients for opponent */
.player_buildings.opponent .player_building_column.Brown {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#702c12+0,702c12+100&0+0,0.4+100 */
    background: linear-gradient(to bottom, rgba(112, 44, 18, 0) 0%, rgba(112, 44, 18, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.opponent .player_building_column.Grey {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#858680+0,858680+100&0+0,0.4+100 */
    background: linear-gradient(to bottom, rgba(133, 134, 128, 0) 0%, rgba(133, 134, 128, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.opponent .player_building_column.Yellow {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#f8b305+0,f8b305+100&0+0,0.4+100 */
    background: linear-gradient(to bottom, rgba(248, 179, 5, 0) 0%, rgba(248, 179, 5, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.opponent .player_building_column.Blue {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#0275aa+0,0275aa+100&0+0,0.4+100 */
    background: linear-gradient(to bottom, rgba(2, 117, 170, 0) 0%, rgba(2, 117, 170, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.opponent .player_building_column.Red {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#b7110e+0,b7110e+100&0+0,0.4+100 */
    background: linear-gradient(to bottom, rgba(183, 17, 14, 0) 0%, rgba(183, 17, 14, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.opponent .player_building_column.Green {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#027234+0,027234+100&0+0,0.4+100 */
    background: linear-gradient(to bottom, rgba(2, 114, 52, 0) 0%, rgba(2, 114, 52, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.opponent .player_building_column.Purple {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#6f488b+0,6f488b+100&0+0,0.4+100 */
    background: linear-gradient(to bottom, rgba(111, 72, 139, 0) 0%, rgba(111, 72, 139, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.opponent .player_building_column.Agora {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#858680+0,858680+100&0+0,0.4+100 */
    background: linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.3) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

/* Gradients for me */
.player_buildings.me .player_building_column.Brown {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#702c12+0,702c12+100&0+0,0.4+100 */
    background: linear-gradient(to top, rgba(112, 44, 18, 0) 0%, rgba(112, 44, 18, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.me .player_building_column.Grey {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#858680+0,858680+100&0+0,0.4+100 */
    background: linear-gradient(to top, rgba(133, 134, 128, 0) 0%, rgba(133, 134, 128, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.me .player_building_column.Yellow {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#f8b305+0,f8b305+100&0+0,0.4+100 */
    background: linear-gradient(to top, rgba(248, 179, 5, 0) 0%, rgba(248, 179, 5, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.me .player_building_column.Blue {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#0275aa+0,0275aa+100&0+0,0.4+100 */
    background: linear-gradient(to top, rgba(2, 117, 170, 0) 0%, rgba(2, 117, 170, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.me .player_building_column.Red {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#b7110e+0,b7110e+100&0+0,0.4+100 */
    background: linear-gradient(to top, rgba(183, 17, 14, 0) 0%, rgba(183, 17, 14, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.me .player_building_column.Green {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#027234+0,027234+100&0+0,0.4+100 */
    background: linear-gradient(to top, rgba(2, 114, 52, 0) 0%, rgba(2, 114, 52, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.me .player_building_column.Purple {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#6f488b+0,6f488b+100&0+0,0.4+100 */
    background: linear-gradient(to top, rgba(111, 72, 139, 0) 0%, rgba(111, 72, 139, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.me .player_building_column.Agora {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#858680+0,858680+100&0+0,0.4+100 */
    background: linear-gradient(to top, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.3) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.science_progress {
    order: 99;
    height: calc(var(--building-header-small-height) * 0.75) !important;
    line-height: calc(var(--building-header-small-height) * 0.75);

    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;

    font-size: calc(14px * var(--scale));
    font-weight: bold;
    color: #006c2f;
    text-shadow: 1px 1px 1px #FFFFFF;
}

.science_progress span {
    cursor: default;
    pointer-events: none;
}

#swd_wrap.portrait .player_wonders_mobile.opponent {
    border-radius: var(--small-border-radius) var(--small-border-radius) 0 0;
}

#swd_wrap.portrait .player_wonders_mobile.me {
    border-radius: 0 0 var(--small-border-radius) var(--small-border-radius);
}

#swd_wrap.square .player_wonders_container.opponent, #swd_wrap.landscape .player_wonders_container.opponent {
    border-radius: var(--small-border-radius) 0 var(--small-border-radius) var(--small-border-radius);
}

#swd_wrap.square .player_wonders_container.me, #swd_wrap.landscape .player_wonders_container.me {
    border-radius: var(--small-border-radius) var(--small-border-radius) 0 var(--small-border-radius);
}

.player_wonders_container {
    display: flex;
    flex-direction: column;
}
/*#swd_wrap.portrait .player_wonders_container {*/
/*    border-radius: 0 0 var(--small-border-radius) var(--small-border-radius);*/
/*}*/

#swd_wrap.square .player_wonders_container {
    flex-direction: row;
}

.player_wonders .wonder_small {
    z-index: 2;
    position: absolute;
}

.player_wonders .age_card_container {
    position: relative;
    top: calc(-10px * var(--scale));
    left: calc(103px * var(--scale));
    width: var(--building-small-width);
    height: var(--building-small-height);
}

/* So during wonder selection, during the sliding animation the player wonder will be on top of the selection wonders. And when constructing a wonder the age card will be on top of the other draftpool cards. */
.player_wonders .wonder_container {
    z-index: 10;
}

.player_wonders .wonder_container .card_outline {
    position: absolute;
    top: calc(17px * var(--scale));
    left: calc(76px * var(--scale));
    width: var(--building-small-height);
    height: var(--building-small-width);
}

.player_wonders .red_border {
    cursor: pointer;
}

.player_wonders .age_card_container .building_small {
    position: absolute;
    transform: rotate(-90deg);
}

.player_wonder_cost {
    left: calc(var(--wonder-width) * var(--wonder-small-scale) * 0.99);
    top: calc(var(--wonder-height) * var(--wonder-small-scale) * 0.4);
    position: absolute;
    z-index: 2;
}

.player_wonder_cost .coin {
    --element-scale: 0.85;
}

#swd_wrap.square .player_wonders {
    width: calc(var(--wonder-small-scale) * var(--wonder-width) * var(--wonder-plus-age-card-scale));
    height: calc(4 * var(--wonder-small-scale) * var(--wonder-height) + 3 * var(--gutter));
}

#swd_wrap.landscape .player_wonders {
    width: calc(2 * var(--wonder-small-scale) * var(--wonder-width) * var(--wonder-plus-age-card-scale) + 1 * var(--gutter));
    height: calc(2 * var(--wonder-small-scale) * var(--wonder-height) + 1 * var(--gutter));
}

#swd_wrap.portrait .player_wonders {
    min-width: calc(4 * var(--wonder-small-scale) * var(--wonder-width) * var(--wonder-plus-age-card-scale) + 3 * var(--gutter));
    height: calc(var(--wonder-small-scale) * var(--wonder-height));

    align-content: center;
}

.player_wonders {
    position: relative;

    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    justify-content: space-between;
}

.player_wonders > div:not(:last-child) {
    margin-right: var(--gutter);
}

.player_wonders > div {
    width: calc(var(--wonder-small-scale) * var(--wonder-width) * var(--wonder-plus-age-card-scale));
    height: calc(var(--wonder-small-scale) * var(--wonder-height));
}

.player_area_progress_tokens {
    display: inline-block;
    text-align: center;
    position: relative;
    z-index: 10;
}

.player_area_progress_tokens > div {
    display: inline-block;
    position: relative;
    width: calc(var(--progress-token-width) * var(--progress-token-small-scale));
    height: calc(var(--progress-token-height) * var(--progress-token-small-scale));
}

.player_area_progress_tokens > div:nth-of-type(4) > div, .player_area_progress_tokens > div:nth-of-type(5) > div, .player_area_progress_tokens > div:nth-of-type(6) > div {
    margin-bottom: calc(-12px * var(--scale));
}

.player_area_progress_tokens > div:nth-of-type(4), .player_area_progress_tokens > div:nth-of-type(5), .player_area_progress_tokens > div:nth-of-type(6) {
    position: relative;
    top: calc(-8px * var(--scale));
    margin-bottom: calc(-12px * var(--scale));
    display: none;
}

.player_area_coins {
    float: right;
    text-align: center;

    width: calc(var(--scale) * 30px);
    height: calc(var(--scale) * 30px);
}

.player_area_coins .coin {
    z-index: 105; /* So animated coins fly under it */
    position: relative; /* For the z-index to work */
}

.player_area_points {
    /* Define width/height to keep the same position when the points icon moves to the end game table. */
    width: calc(var(--scale) * 30px);
    height: calc(var(--scale) * 30px);
    position: relative;
    margin-left: var(--gutter);
}

.player_area_cubes {
    /* Define width/height to keep the same position when the points icon moves to the end game table. */
    width: calc(var(--scale) * 28.4px);
    height: calc(var(--scale) * 30px);
    position: relative;
    margin-left: var(--gutter);
}

/*
 ____  _                            _        _   _
|  _ \| | __ _ _   _  ___ _ __     / \   ___| |_(_) ___  _ __  ___
| |_) | |/ _` | | | |/ _ \ '__|   / _ \ / __| __| |/ _ \| '_ \/ __|
|  __/| | (_| | |_| |  __/ |     / ___ \ (__| |_| | (_) | | | \__ \
|_|   |_|\__,_|\__, |\___|_|    /_/   \_\___|\__|_|\___/|_| |_|___/
               |___/
 */

.action_construct {
    background-image: url('img/sprites.png');
    background-position: 0.600601% 95.5357%;
    background-size: 286.034%;

    width: calc(90px * var(--scale));
    height: calc(32px * var(--scale));
}

.action_wonder {
    background-image: url('img/sprites.png');
    background-position: 82.5581% 76.1261%;
    background-size: 624.390%;

    width: calc(41px * var(--scale));
    height: calc(34px * var(--scale));
}

.action_button * {
    display: inline-block;
    vertical-align: middle;
    pointer-events: none;
    font-size: calc(14px * var(--scale));
}

.action_button .emblem {
    width: calc(34px * var(--scale));
    height: calc(34px * var(--scale));
}

/*
 ____        _ _     _ _
| __ ) _   _(_) | __| (_)_ __   __ _ ___
|  _ \| | | | | |/ _` | | '_ \ / _` / __|
| |_) | |_| | | | (_| | | | | | (_| \__ \
|____/ \__,_|_|_|\__,_|_|_| |_|\__, |___/
                               |___/
 */
.building {
    width: calc(var(--building-width) * var(--scale));
    height: calc(var(--building-height) * var(--scale));
    background-size: calc(var(--building-width) * var(--building-spritesheet-columns) * var(--scale)) calc(var(--building-height) * var(--building-spritesheet-rows) * var(--scale));
    background-image: url('img/buildings.jpg');
    border-radius: calc(14px * var(--scale));
    box-shadow: calc(var(--scale) * 5px) calc(var(--scale) * 5px) calc(var(--scale) * 5px) 0 rgba(0, 0, 0, 0.4),
    inset 0 0 0 calc(var(--scale) * 1px) #00000060;
    display: inline-block;
    position: relative;
}

.building_header_small {
    width: var(--building-small-width);
    height: var(--building-header-small-height);
    background-size: calc(var(--building-width) * var(--building-spritesheet-columns) * var(--building-small-scale)) calc(var(--building-height) * var(--building-spritesheet-rows) * var(--building-small-scale));
    border-radius: var(--small-border-radius);
    box-shadow: 0 0 calc(var(--scale) * 3px) calc(var(--scale) * 1px) rgba(0, 0, 0, 0.4),
    inset 0 0 0 calc(var(--scale) * 0.5px) #00000060;
    display: block;
    position: relative; /* For the sliding animation (draftpool to player area) to work */
    z-index: 15; /* So they are on top of the draftpool buildings during animation */
}

.building_header_small_container {
    width: var(--building-small-width);
    height: var(--building-header-small-height);
    display: block;
}

/* Put some margin between borders, mostly to prevent misclicks on mobile. Doesn't include current_player_is_active / state so the position stays the same during the animation.
Because of reversing the flexbox order for the opponent there are 2 different rules.*/
.player_buildings.me .player_building_column.red_border .building_header_small_container:not(:last-child) {
    margin-bottom: calc(2 * var(--gutter));
}

.player_buildings.opponent .player_building_column.red_border .building_header_small_container:not(:first-child) {
    margin-bottom: calc(2 * var(--gutter));
}

.current_player_is_active #swd[data-state=chooseOpponentBuilding] .player_building_column.red_border .building_header_small {
    cursor: pointer;
}

.current_player_is_active #swd[data-state=playerTurn] #draftpool .building_small.available,
.current_player_is_active #swd[data-state=client_useAgeCard] #draftpool .building_small.available {
    cursor: pointer;
}

.building_small {
    width: var(--building-small-width);
    height: var(--building-small-height);
    background-size: calc(var(--building-width) * var(--building-spritesheet-columns) * var(--building-small-scale)) calc(var(--building-height) * var(--building-spritesheet-rows) * var(--building-small-scale));
    border-radius: var(--small-border-radius);
    box-shadow: 0 0 calc(var(--scale) * 3px) calc(var(--scale) * 1px) rgba(0, 0, 0, 0.4),
    inset 0 0 0 calc(var(--scale) * 0.5px) #00000060;
    text-align: center;
    backface-visibility: hidden;
}

.age1_back {
    background-position: -300% -700%;
}

.age2_back {
    background-position: -400% -700%;
}

.age3_back {
    background-position: -500% -700%;
}

.guild_back {
    background-position: -600% -700%;
}

.linked_building_icon {
    background-image: url('img/linked-building-icons.jpg');
    width: calc(var(--scale) * var(--element-scale) * var(--linked-building-icon-width));
    height: calc(var(--scale) * var(--element-scale) * var(--linked-building-icon-height));
    background-size: calc(var(--linked-building-icon-spritesheet-width) * var(--scale) * var(--element-scale)) calc(var(--linked-building-icon-spritesheet-height) * var(--scale) * var(--element-scale));
    border-radius: calc(var(--scale) * 3px);
    display: inline-block;
    box-shadow: calc(var(--scale) * 1px) calc(var(--scale) * 1px) calc(var(--scale) * 3px) 0 rgba(0, 0, 0, 0.4),
    inset 0 0 0 calc(var(--scale) * 1px) #00000060;
}

.linked_building_icon_small {
    width: calc(var(--linked-building-icon-width) * var(--linked-building-icon-small-scale));
    height: calc(var(--linked-building-icon-height) * var(--linked-building-icon-small-scale));
    background-size: calc(var(--linked-building-icon-spritesheet-width) * var(--linked-building-icon-small-scale)) calc(var(--linked-building-icon-spritesheet-height) * var(--linked-building-icon-small-scale));
    border-radius: calc(var(--scale) * 2px);
    position: absolute;
    left: calc(var(--building-small-width) * 0.55);
    top: calc(var(--scale) * 18px);
    z-index: 2;
    box-shadow: calc(var(--scale) * 1px) calc(var(--scale) * 1px) calc(var(--scale) * 1px) 0 rgba(0, 0, 0, 0.3),
    inset 0 0 0 calc(var(--scale) * 0.5px) #00000060;
}

.opponent .linked_building_icon_small {
    top: calc(var(--scale) * -7px);
}

/*
__        __              _
\ \      / /__  _ __   __| | ___ _ __ ___
 \ \ /\ / / _ \| '_ \ / _` |/ _ \ '__/ __|
  \ V  V / (_) | | | | (_| |  __/ |  \__ \
   \_/\_/ \___/|_| |_|\__,_|\___|_|  |___/
 */

.wonder_container {
    display: inline-block;
    position: relative; /* Without this the wonder won't slide properly */
}

.wonder {
    width: calc(var(--wonder-width) * var(--scale));
    height: calc(var(--wonder-height) * var(--scale));
    background-size: calc(var(--wonder-spritesheet-width) * var(--scale)) calc(var(--wonder-spritesheet-height) * var(--scale));
    background-image: url('img/wonders.jpg');
    border-radius: calc(var(--wonder-border-radius) * var(--scale));
    box-shadow: calc(var(--scale) * 5px) calc(var(--scale) * 5px) calc(var(--scale) * 5px) 0 rgba(0, 0, 0, 0.4),
    inset 0 0 0 1px #00000060;

    /* Temporary: */
    display: inline-block;
    position: inherit;
}

.wonder_small {
    width: calc(var(--wonder-width) * var(--wonder-small-scale));
    height: calc(var(--wonder-height) * var(--wonder-small-scale));
    background-size: calc(var(--wonder-spritesheet-width) * var(--wonder-small-scale)) calc(var(--wonder-spritesheet-height) * var(--wonder-small-scale));
    border-radius: calc(var(--wonder-border-radius) * var(--wonder-small-scale));
    box-shadow: 0 0 calc(var(--scale) * 3px) calc(var(--scale) * 1px) rgba(0, 0, 0, 0.4),
    inset 0 0 0 calc(var(--scale) * 0.5px) #00000060;
    text-align: center;
}

/*
  ____                      _                _
 / ___|___  _ __  ___ _ __ (_)_ __ __ _  ___(_) ___  ___
| |   / _ \| '_ \/ __| '_ \| | '__/ _` |/ __| |/ _ \/ __|
| |__| (_) | | | \__ \ |_) | | | | (_| | (__| |  __/\__ \
 \____\___/|_| |_|___/ .__/|_|_|  \__,_|\___|_|\___||___/
                     |_|
 */

.conspiracy {
    width: calc(var(--conspiracy-width) * var(--scale));
    height: calc(var(--conspiracy-height) * var(--scale));
    background-size: calc(var(--conspiracy-spritesheet-width) * var(--scale)) calc(var(--conspiracy-spritesheet-height) * var(--scale));
    background-image: url('img/agora_conspiracies.jpg');
    border-radius: calc(var(--conspiracy-border-radius) * var(--scale));
    box-shadow: calc(var(--scale) * 5px) calc(var(--scale) * 5px) calc(var(--scale) * 5px) 0 rgba(0, 0, 0, 0.4),
    inset 0 0 0 1px #00000060;

    /* Temporary: */
    display: inline-block;
    position: inherit;
}

.conspiracy_small {
    width: calc(var(--conspiracy-width) * var(--conspiracy-small-scale));
    height: calc(var(--conspiracy-height) * var(--conspiracy-small-scale));
    background-size: calc(var(--conspiracy-spritesheet-width) * var(--conspiracy-small-scale)) calc(var(--conspiracy-spritesheet-height) * var(--conspiracy-small-scale));
    border-radius: calc(var(--conspiracy-border-radius) * var(--conspiracy-small-scale));
    box-shadow: 0 0 calc(var(--scale) * 3px) calc(var(--scale) * 1px) rgba(0, 0, 0, 0.4),
    inset 0 0 0 calc(var(--scale) * 0.5px) #00000060;
    text-align: center;
}
.conspiracy_compact {
    height: calc(var(--conspiracy-compact-height) * var(--conspiracy-small-scale));
}

.conspiracy_container > .conspiracy {
    top: calc(21px * var(--scale));
}
.conspiracy_container {
    display: inline-block;
    position: relative; /* Without this the conspiracy won't slide properly */
}

/* So during conspiracy selection, during the sliding animation the player wonder will be on top of the selection wonders. And when constructing a wonder the age card will be on top of the other draftpool cards. */
.player_conspiracies .conspiracy_container {
    z-index: 10;
}

.player_conspiracies .conspiracy_container .card_outline {
    position: absolute;
    top: 0;
    left: calc(17px * var(--scale));
    width: var(--building-small-width);
    height: calc(var(--conspiracy-compact-height) * var(--conspiracy-small-scale));
}

.swd_title {
    font-family: "PossumSaltareNF", serif;
    text-align: center;
    text-transform: uppercase;
}

.building .swd_title {
    position: absolute;
    top: 89%;
    font-size: calc(14px * var(--scale));
    display: block;
    margin-left: auto;
    margin-right: auto;
    width: calc(var(--building-width) * var(--scale));
}
.building[data-building-type=Agora] .swd_title {
    display: none;
}

.building_small .swd_title {
    top: 89.5%;
    font-size: calc(13.5px * var(--building-small-scale));
    margin-left: auto;
    margin-right: auto;
    width: var(--building-small-width);
}

.wonder .swd_title {
    position: relative;
    top: 86%;
    left: -3.5%;
    font-size: calc(16px * var(--scale));
    display: block;
}

.wonder_small .swd_title {
    font-size: calc(16px * var(--wonder-small-scale));
}

.progress_token .swd_title {
    font-size: 22px; /* Scales automatically through the svg */
}

.conspiracy .swd_title {
    position: relative;
    top: 65%;
    font-size: calc(16px * var(--scale));
    display: block;
}

.conspiracy_small .swd_title {
    font-size: calc(16px * var(--wonder-small-scale));
}
.conspiracy_small.conspiracy_compact .swd_title {
    top: 9%;
}

/*
 ____                                      _____     _
|  _ \ _ __ ___   __ _ _ __ ___  ___ ___  |_   _|__ | | _____ _ __  ___
| |_) | '__/ _ \ / _` | '__/ _ \/ __/ __|   | |/ _ \| |/ / _ \ '_ \/ __|
|  __/| | | (_) | (_| | | |  __/\__ \__ \   | | (_) |   <  __/ | | \__ \
|_|   |_|  \___/ \__, |_|  \___||___/___/   |_|\___/|_|\_\___|_| |_|___/
                 |___/
 */

.current_player_is_active #swd[data-state=chooseProgressToken] #board_progress_tokens .progress_token_small {
    cursor: pointer;
}

.progress_token {
    width: calc(var(--progress-token-width) * var(--scale));
    height: calc(var(--progress-token-height) * var(--scale));
    background-size: calc(var(--progress-token-spritesheet-width) * var(--scale)) calc(var(--progress-token-spritesheet-height) * var(--scale));
    background-image: url('img/progress_tokens.jpg');
    border-radius: calc(var(--progress-token-width) * var(--scale) * 0.5);
    box-shadow: calc(var(--scale) * 5px) calc(var(--scale) * 5px) calc(var(--scale) * 5px) 0 rgba(0, 0, 0, 0.4),
    inset 0 0 0 calc(var(--scale) * 1px) #00000060;

    /* Temporary: */
    display: inline-block;
    position: inherit;
}

.progress_token_small {
    position: relative;
    z-index: 5;
    width: calc(var(--progress-token-width) * var(--progress-token-small-scale) * var(--element-scale));
    height: calc(var(--progress-token-height) * var(--progress-token-small-scale) * var(--element-scale));
    background-size: calc(var(--progress-token-spritesheet-width) * var(--progress-token-small-scale) * var(--element-scale)) calc(var(--progress-token-spritesheet-height) * var(--progress-token-small-scale) * var(--element-scale));
    border-radius: calc(var(--progress-token-width) * var(--progress-token-small-scale) * var(--element-scale) * 0.5);
    box-shadow: 0 0 calc(var(--scale) * 3px) calc(var(--scale) * 1px) rgba(0, 0, 0, 0.4),
    inset 0 0 0 calc(var(--scale) * 0.5px) #00000060;
}

/*
 ____
|  _ \  ___  ___ _ __ ___  ___  ___
| | | |/ _ \/ __| '__/ _ \/ _ \/ __|
| |_| |  __/ (__| | |  __/  __/\__ \
|____/ \___|\___|_|  \___|\___||___/
 */

.decree {
    width: calc(var(--decree-width) * var(--scale));
    height: calc(var(--decree-height) * var(--scale));
    background-size: calc(var(--decree-spritesheet-width) * var(--scale)) calc(var(--decree-spritesheet-height) * var(--scale));
    background-image: url('img/agora_decrees.png');
    filter: drop-shadow(0px 0px calc(var(--scale) * 1px) #000000);

    /* Temporary: */
    display: block;
    position: relative;
}

.decree_small {
    z-index: 5;
    width: calc(var(--decree-width) * var(--decree-small-scale) * var(--element-scale));
    height: calc(var(--decree-height) * var(--decree-small-scale) * var(--element-scale));
    background-size: calc(var(--decree-spritesheet-width) * var(--decree-small-scale) * var(--element-scale)) calc(var(--decree-spritesheet-height) * var(--decree-small-scale) * var(--element-scale));
    filter: drop-shadow(0px 0px calc(var(--scale) * 1px) #000000);
}

.decree_containers {

}
.decree_containers > div > div:not(:first-of-type) {
    margin-top: calc(var(--senate-scale) * -13px);
}
.decree_containers > div {
    position: absolute;
    transform-origin: 50% 0%;
    z-index:20; /* Don't know why but this div level specifically needs the z-index set. (Goal is to have the decrees over the age cards if they are stacked 3 deep) */
}
.decree_containers > div:nth-of-type(1) {
    transform: rotate(135deg);
    left: calc(var(--senate-scale) * 130px);
    top: calc(var(--senate-scale) * 118px);
}
.decree_containers > div:nth-of-type(2) {
    transform: rotate(116deg);
    left: calc(var(--senate-scale) * 43px);
    top: calc(var(--senate-scale) * 247px);
}
.decree_containers > div:nth-of-type(3) {
    transform: rotate(99deg);
    left: calc(var(--senate-scale) * -2px);
    top: calc(var(--senate-scale) * 397px);
}
.decree_containers > div:nth-of-type(4) {
    transform: rotate(81deg);
    left: calc(var(--senate-scale) * -2px);
    top: calc(var(--senate-scale) * 557px);
}
.decree_containers > div:nth-of-type(5) {
    transform: rotate(64deg);
    left: calc(var(--senate-scale) * 43px);
    top: calc(var(--senate-scale) * 708px);
}
.decree_containers > div:nth-of-type(6) {
    transform: rotate(45deg);
    left: calc(var(--senate-scale) * 130px);
    top: calc(var(--senate-scale) * 837px);
}

/*
 ___        __ _                                        _
|_ _|_ __  / _| |_   _  ___ _ __   ___ ___    ___ _   _| |__   ___  ___
 | || '_ \| |_| | | | |/ _ \ '_ \ / __/ _ \  / __| | | | '_ \ / _ \/ __|
 | || | | |  _| | |_| |  __/ | | | (_|  __/ | (__| |_| | |_) |  __/\__ \
|___|_| |_|_| |_|\__,_|\___|_| |_|\___\___|  \___|\__,_|_.__/ \___||___/
 */

.influence_containers > div {
    position: absolute;
    z-index: 25;
}
.influence_containers > div:nth-of-type(1) {
    left: calc(var(--senate-scale) * 143px);
    top: calc(var(--senate-scale) * 106px);
    transform: rotate(0deg);
}
.influence_containers > div:nth-of-type(1) span {
    transform: rotate(0deg);
}
.influence_containers > div:nth-of-type(2) {
    left: calc(var(--senate-scale) * 52px);
    top: calc(var(--senate-scale) * 239px);
    transform: rotate(-19deg);
}
.influence_containers > div:nth-of-type(2) span {
    transform: rotate(19deg);
}
.influence_containers > div:nth-of-type(3) {
    left: calc(var(--senate-scale) * 6px);
    top: calc(var(--senate-scale) * 395px);
    transform: rotate(-36deg);
}
.influence_containers > div:nth-of-type(3) span {
    transform: rotate(36deg);
}
.influence_containers > div:nth-of-type(4) {
    left: calc(var(--senate-scale) * 6px);
    top: calc(var(--senate-scale) * 560px);
    transform: rotate(-54deg);
}
.influence_containers > div:nth-of-type(4) span {
    transform: rotate(54deg);
}
.influence_containers > div:nth-of-type(5) {
    left: calc(var(--senate-scale) * 52px);
    top: calc(var(--senate-scale) * 714px);
    transform: rotate(-71deg);
}
.influence_containers > div:nth-of-type(5) span {
    transform: rotate(71deg);
}
.influence_containers > div:nth-of-type(6) {
    left: calc(var(--senate-scale) * 143px);
    top: calc(var(--senate-scale) * 848px);
    transform: rotate(-90deg);
}

.influence_containers > div:nth-of-type(6) span {
    transform: rotate(90deg);
}

.influence_containers > div > div {
    position: absolute;
}

.agora_cube {
    text-align: center;
    filter: drop-shadow(0px 0px calc(var(--scale) * 1px) #000000);
    backface-visibility: hidden;

    width: calc(var(--senate-scale) * 22px);
    height: calc(var(--senate-scale) * 22px);
    display: inline-block;
    position: absolute;
    transition: top ease-in-out 0.7s, left ease-in-out 0.7s;
}

.agora_cube > span {
    font-family: "Cafeteria-Black", Roboto, Arial, sans-serif;
    font-size: calc(var(--scale) * var(--element-scale) * 16px);
    line-height: calc(var(--senate-scale) * 22px) !important;
    text-shadow: 0 0 calc(var(--scale) * 2px) white, 0 0 calc(var(--scale) * 2px) white, 0 0 calc(var(--scale) * 2px) white;
    color: black;
    cursor: default;
    position: relative;
    display: inline-block;
}

.agora_cube_me {
    background-position: 66.5049% 37.1359%;
    background-size: 512.000%;
    top: calc(var(--senate-scale) * 35px);
    left: 0;
}

.agora_cube_opponent {
    background-position: 91.2621% 37.1359%;
    background-size: 512.000%;
    left: calc(var(--senate-scale) * 35px);
    top: 0;
}

.agora_control {
    left: 0;
    top: 0;
}

/*
 ____  _                       _          _                     _
|  _ \(_)___  ___ __ _ _ __ __| | ___  __| |   ___ __ _ _ __ __| |___
| | | | / __|/ __/ _` | '__/ _` |/ _ \/ _` |  / __/ _` | '__/ _` / __|
| |_| | \__ \ (_| (_| | | | (_| |  __/ (_| | | (_| (_| | | | (_| \__ \
|____/|_|___/\___\__,_|_|  \__,_|\___|\__,_|  \___\__,_|_|  \__,_|___/
 */

#discarded_cards_whiteblock {
    margin-top: var(--gutter) !important;
    margin-left: auto !important;
    margin-right: auto !important;
    box-sizing: border-box;
}

#discarded_cards_container {
    margin: 0 calc(0px - var(--gutter)) calc(0px - var(--gutter)) 0;
}

#discarded_cards_container div {
    position: relative !important;
    display: inline-block;
    width: var(--building-small-width);
    height: var(--building-small-height);
    margin: 0 var(--gutter) var(--gutter) 0;
}

.current_player_is_active #swd[data-state=chooseDiscardedBuilding] #discarded_cards_container .building_small {
    cursor: pointer;
}

.discarded_cards_cursor {
    display: none !important;
}

/*
 _____           _    ____
| ____|_ __   __| |  / ___| __ _ _ __ ___   ___
|  _| | '_ \ / _` | | |  _ / _` | '_ ` _ \ / _ \
| |___| | | | (_| | | |_| | (_| | | | | | |  __/
|_____|_| |_|\__,_|  \____|\__,_|_| |_| |_|\___|
 */

.endgame_highlight {
    animation: endgame_highlight 0.5s infinite alternate;
    z-index: 200;
}

@keyframes endgame_highlight {
    from {
        outline-color: #ff000066;
        outline-width: calc(10px * var(--scale));
        outline-style: double;
        outline-offset: calc(1px * var(--scale));
    }
    to {
        outline-color: #ff0000;
        outline-width: calc(10px * var(--scale));
        outline-style: double;
        outline-offset: calc(4px * var(--scale));
    }
}

#end_game_container {
    margin: var(--gutter) !important;
}

#end_game_container table {
    /* Trick to hide white borders on the outside of the table. */
    border-style: hidden;
}

#end_game_container td {
    border: calc(3px * var(--scale)) solid #ffffff88;
    padding: calc(5px * var(--scale)) calc(1px * var(--scale)) calc(5px * var(--scale)) calc(1px * var(--scale));

    font-size: calc(24px * var(--scale));
    font-weight: bold;
    /* Make all category columns same width */
    min-width: calc(var(--scale) * 58px);
    /* Keep table within width of middle column by keeping the first column narrow enough */
    max-width: calc(var(--scale) * 155px);
    /* Cut off player name if it's too long. */
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}
#end_game_container tr td:not(:first-of-type) {
    font-family: "Cafeteria-Black", Roboto, Arial, sans-serif;
    font-size: calc(32px * var(--scale));
    font-weight: normal;
}

.end_game_player_name {
    font-size: calc(18px * var(--scale)) !important;
    text-shadow: 1px 1px 1px #FFFFFF;
}

.end_game_icon {
    display: inline-block;
}

.end_game_card {
    background-image: url('img/sprites.png');
    width: calc(var(--scale) * 29px);
    height: calc(var(--scale) * 44px);
    background-color: initial !important;
}

.end_game_blue {
    color: #0074bcaa;
    background-color: #0074bc30;
    text-shadow: 0 0 0 #000000bb;
}

.end_game_blue .end_game_card {
    background-position: 93.3921% 0.471698%;
    background-size: 882.759%;
}

.end_game_green {
    color: #008d48aa;
    background-color: #008d4830;
    text-shadow: 0 0 0 #000000bb;
}

.end_game_green .end_game_card {
    background-position: 80.1762% 42.9245%;
    background-size: 882.759%;
}

.end_game_yellow {
    color: #fccc14aa;
    background-color: #fccc1430;
    text-shadow: 0 0 0 #000000bb;
}

.end_game_yellow .end_game_card {
    background-position: 60.3524% 0.471698%;
    background-size: 882.759%;
}

.end_game_purple {
    color: #7a5b92aa;
    background-color: #7a5b9230;
    text-shadow: 0 0 0 #000000bb;
}

.end_game_purple .end_game_card {
    background-position: 93.3921% 42.9245%;
    background-size: 882.759%;
}

.end_game_wonders {
    color: #f7c161aa;
    background-color: #f7c16130;
    text-shadow: 0 0 0 #000000bb;
}

.end_game_wonders .end_game_card {
    background-image: url('img/sprites.png');
    background-position: 82.5581% 76.1261%;
    background-size: 624.390%;

    width: calc(var(--scale) * 53px);
    height: calc(var(--scale) * 44px);
}

.end_game_progresstokens {
    color: #1b6332aa;
    background-color: #1b633230;
    text-shadow: 0 0 0 #000000bb;
}

.end_game_progresstokens .end_game_card {
    background-position: 0.471698% 79.7170%;
    background-size: 581.818%;
    width: calc(var(--scale) * 44px);
    height: calc(var(--scale) * 44px);
}

.end_game_coins {
    color: #e0bd0eaa;
    background-color: #e0bd0e30;
    text-shadow: 0 0 0 #000000bb;
}

.end_game_coins .end_game_card {
    background-image: url('img/sprites.png');
    background-position: 40.4867% 94.6903%;
    background-size: 853.333%;

    width: calc(var(--scale) * 44px);
    height: calc(var(--scale) * 44px);
}

.end_game_military {
    color: #c21f2caa;
    background-color: #c21f2c30;
    text-shadow: 0 0 0 #000000bb;
}

.end_game_military .end_game_card {
    background-position: 42.2274% 79.3427%;
    background-size: 632.099%;
    width: calc(var(--scale) * 44px);
    height: calc(var(--scale) * 44px);
}

.end_game_total {
    --element-scale: 1.4;
    width: calc(var(--scale) * var(--element-scale) * 30px);
    height: calc(var(--scale) * var(--element-scale) * 30px);
    position: relative;
    margin: auto;
}

/*
 ____       _   _   _
/ ___|  ___| |_| |_(_)_ __   __ _ ___
\___ \ / _ \ __| __| | '_ \ / _` / __|
 ___) |  __/ |_| |_| | | | | (_| \__ \
|____/ \___|\__|\__|_|_| |_|\__, |___/
                            |___/
 */

#settings_whiteblock {
    margin-top: var(--gutter) !important;
    margin-left: auto !important;
    margin-right: auto !important;
    box-sizing: border-box;
}

.settings_table {
    font-size: max(14px, calc(16px * var(--scale)));
    line-height: max(16px, calc(28px * var(--scale)));
}

.settings_table tr td {
    vertical-align: top;
}

.settings_table tr td:first-of-type {
    white-space: nowrap;
}

.settings_table tr td:not(:last-of-type) {
    padding-right: var(--gutter);
}

/*
 _____           _ _   _
|_   _|__   ___ | | |_(_)_ __  ___
  | |/ _ \ / _ \| | __| | '_ \/ __|
  | | (_) | (_) | | |_| | |_) \__ \
  |_|\___/ \___/|_|\__|_| .__/|___/
                        |_|
 */

.swd_tooltip * {
    font-size: calc(var(--scale) * 14px);
}

.swd_tooltip {
    width: calc(var(--scale) * 700px);
    display: flex;
    justify-content: space-between;
}

.swd_tooltip > div {
    flex-grow: 1;
}

.dijitTooltipContents li {
    list-style: outside;
    margin-left: calc(25px * var(--scale));
}
.swd_tooltip li.no_li {
    list-style: none;
    margin-left: 0;
}

.progress_token_tooltip {
    width: calc(450px * var(--scale));
}

.tooltipWiggle {
    animation: tooltipWiggle 2s infinite alternate;
    align-self: center;
}

@keyframes tooltipWiggle {
    from {
        transform: perspective(40em) rotateY(-18deg) scale(0.93); /* The 0.95 makes the graphic fit the tooltip better */
        animation-timing-function: ease-in-out;
    }
    to {
        transform: perspective(40em) rotateY(-10deg) scale(0.93); /* The 0.95 makes the graphic fit the tooltip better */
        animation-timing-function: ease-in-out;
    }
}

.payment_plan {
    margin: var(--gutter) 0 var(--gutter) var(--gutter);
}

.payment_plan > div {
    vertical-align: middle;
}

/*
 _     _     _            __                     _
| |   (_)___| |_    ___  / _|   ___ __ _ _ __ __| |___
| |   | / __| __|  / _ \| |_   / __/ _` | '__/ _` / __|
| |___| \__ \ |_  | (_) |  _| | (_| (_| | | | (_| \__ \
|_____|_|___/\__|  \___/|_|    \___\__,_|_|  \__,_|___/
 */

#list_of_cards_flexbox {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
    justify-content: center;
}

.list_of_cards_whiteblock {
    margin: var(--gutter) calc(0.5 * var(--gutter)) 0 calc(0.5 * var(--gutter)) !important;
}

.list_of_cards_header {
    width: 100%;
    display: flex;
    justify-content: space-around;
}

.list_of_cards_header > div {
    text-align: center;
}

.list_of_cards {
    position: relative;
    filter: drop-shadow(0px 0px calc(var(--scale) * 1px) #000000);
}

.list_of_cards > div {
    position: absolute;
}

.list_of_cards span {
    font-family: "PossumSaltareNF", serif;
    font-size: calc(var(--list-of-cards-scale) * 18px);
    text-transform: uppercase;
    left: calc(var(--list-of-cards-scale) * 10px);
    top: calc(var(--list-of-cards-scale) * 3px);
    position: relative;
}

.list_card_page1 {
    width: calc(var(--list-of-cards-scale) * 295px);
    height: calc(var(--list-of-cards-scale) * 55px);
}

.list_card_page2 {
    width: calc(var(--list-of-cards-scale) * 228px);
    height: calc(var(--list-of-cards-scale) * 55px);
}

.list_card_guild {
    width: calc(var(--list-of-cards-scale) * 269px);
    height: calc(var(--list-of-cards-scale) * 78px);
}

.list_of_cards_linked {
    background-image: url('img/list_of_cards_linked.png');
    width: calc(var(--list-of-cards-scale) * 1004px);
    height: calc(var(--list-of-cards-scale) * 945px);
    background-size: calc(var(--list-of-cards-scale) * 1004px) calc(var(--list-of-cards-scale) * 945px);
}

.list_of_cards_unlinked {
    background-image: url('img/list_of_cards.png');
    width: calc(var(--list-of-cards-scale) * 1004px);
    height: calc(var(--list-of-cards-scale) * 829px);
    background-size: calc(var(--list-of-cards-scale) * 1004px) calc(var(--list-of-cards-scale) * 829px);
}

.agora_cube3d_me, .agora_cube3d_opponent, .agora_cube_me, .agora_cube_opponent, #swd[data-agora="1"] .military_token_2, #swd[data-agora="1"] .military_token_5, .end_game_senate, .agora_icon {
    display: inline-block;
    overflow: hidden;
    background-repeat: no-repeat;
    background-image: url('img/agora_sprites.png');
}

.agora_cube3d_me {
    background-position: 0.537634% 92.8571%;
    background-size: 365.714%;

    width: calc(var(--scale) * var(--element-scale) * 28.4px);
    height: calc(var(--scale) * var(--element-scale) * 30px);

    display: inline-block;
}

.agora_cube3d_opponent {
    background-position: 73.6559% 0.550964%;
    background-size: 365.714%;

    width: calc(var(--scale) * var(--element-scale) * 28.4px);
    height: calc(var(--scale) * var(--element-scale) * 30px);

    display: inline-block;
}

#swd[data-agora="1"] .military_token_2 {
    background-position: 38.4615% 0.869565%;
    background-size: 419.672%;
}

#swd[data-agora="1"] .military_token_5 {
    background-position: 0.546448% 1.12360%;
    background-size: 350.685%;
}

.end_game_senate {
    background-position: 98.1132% 0.428266%;
    background-size: 581.818%;
}

.expansion_icon_container {
    display:none;
}
.player_building_column .expansion_icon_container:only-child {
    /* Only show expansion_icon_container if there are no buildings in this column. */
    display:flex;
    justify-content:center;
    align-items:center;
}
.agora_icon {
    background-position: 87.7637% 10.3594%;
    background-size: 1347.37%;
    width: calc(var(--scale) * 38px * 0.4);
    height: calc(var(--scale) * 39px * 0.4);
}

/*
 _   _ _       _                                              _
| | | (_) __ _| |__        _ __ ___  ___    __ _ ___ ___  ___| |_ ___
| |_| | |/ _` | '_ \ _____| '__/ _ \/ __|  / _` / __/ __|/ _ \ __/ __|
|  _  | | (_| | | | |_____| | |  __/\__ \ | (_| \__ \__ \  __/ |_\__ \
|_| |_|_|\__, |_| |_|     |_|  \___||___/  \__,_|___/___/\___|\__|___/
         |___/
 */

/* High-res 2X assets (retina): */

#swd[data-quality="2x"] .action_construct, #swd[data-quality="2x"] .action_wonder, #swd[data-quality="2x"] .clay, #swd[data-quality="2x"] .coin, #swd[data-quality="2x"] .coin#swd[data-quality="2x"] .opponent, #swd[data-quality="2x"] .end_game_card, #swd[data-quality="2x"] .glass, #swd[data-quality="2x"] .military_token_2, #swd[data-quality="2x"] .military_token_5, #swd[data-quality="2x"] .papyrus, #swd[data-quality="2x"] .pawn, #swd[data-quality="2x"] .point, #swd[data-quality="2x"] .stone, #swd[data-quality="2x"] .wood {
    background-image: url('img/sprites@2X.png') !important;
}

#swd[data-quality="2x"] .board {
    background-image: url('img/board@2X.png') !important;
}

#swd[data-quality="2x"] .building {
    background-image: url('img/buildings@2X.jpg') !important;
}

#swd[data-quality="2x"] .wonder {
    background-image: url('img/wonders@2X.jpg') !important;
}

#swd[data-quality="2x"] .progress_token {
    background-image: url('img/progress_tokens@2X.jpg') !important;
}

#swd[data-quality="2x"] .linked_building_icon {
    background-image: url('img/linked-building-icons@2X.jpg') !important;
}

/* Agora */

#swd[data-quality="2x"] .conspiracy {
    background-image: url('img/agora_conspiracies@2X.jpg');
}
#swd[data-quality="2x"] .decree {
    background-image: url('img/agora_decrees@2X.png');
}
#swd[data-quality="2x"] .senate {
    background-image: url('img/agora_senate@2X.png');
}
#swd[data-quality="2x"] .agora_cube3d_me, #swd[data-quality="2x"] .agora_cube3d_opponent, #swd[data-quality="2x"] .agora_cube_me, #swd[data-quality="2x"] .agora_cube_opponent, #swd[data-agora="1"] #swd[data-quality="2x"] .military_token_2, #swd[data-agora="1"] #swd[data-quality="2x"] .military_token_5, #swd[data-quality="2x"] .end_game_senate, #swd[data-quality="2x"] .agora_icon {
    background-image: url('img/agora_sprites@2X.png');
}
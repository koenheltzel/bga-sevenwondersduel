/**
 *------
 * BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
 * SevenWondersDuel implementation : © Koen Heltzel <koenheltzel@gmail.com>
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * sevenwondersduel.css
 *
 * SevenWondersDuel stylesheet
 *
 */

/*
    This is the CSS stylesheet of your game User Interface.
    
    Styles defined on this file will be applied to the HTML elements you define in your
    HTML template (sevenwondersduel_sevenwondersduel.tpl), and to HTML elements you create dynamically
    (in sevenwondersduel.js).
    
    Usually, you are using CSS to:
    
    1°) define the overall layout of your game
        (ex: place the board on the top left, place player's hand beside, place the deck on the right, ...).

    2°) create your CSS-sprites:
        All images of your games should be gathered into a small number of image files. Then, using
        background-image and background-position CSS properties, you create HTML blocks that can 
        display these images correctly (see example below).
    
    3°) ... anything else:
        It is really easy to add and remove CSS classes dynamically from your Javascript with
        dojo.addClass and dojo.removeClass. It is also easy to check if an element has a class
        (dojo.hasClass) or to get all elements with a specific class (dojo.query). This is why,
        very often, using CSS classes for the logic of your user interface allow you to do complex
        thing easily.
        
        
     Note: on the production platform, this file will be compressed and comments will be removed.
           Consequently, don't hesitate to put as many comments as necessary.
*/


/* Note: you must not use any @import directive */


/********* You can start writing your CSS below this line: **********/


/*
__     __         _       _     _
\ \   / /_ _ _ __(_) __ _| |__ | | ___  ___
 \ \ / / _` | '__| |/ _` | '_ \| |/ _ \/ __|
  \ V / (_| | |  | | (_| | |_) | |  __/\__ \
   \_/ \__,_|_|  |_|\__,_|_.__/|_|\___||___/
*/

:root {
    --scale: 1.0;
    --element-scale: 1.0;
    --gutter: calc(7.5px * var(--scale));

    --building-spritesheet-width: 1660px;
    --building-spritesheet-height: 2080px;
    --building-spritesheet-columns: 10;
    --building-spritesheet-rows: 8;
    --building-spritesheet-scale: 1.253; /* Had to make the spritesheet smaller to support the @2X version at 4096 pixels high. */
    --building-width: calc(var(--building-spritesheet-width) / var(--building-spritesheet-columns) * var(--building-spritesheet-scale));
    --building-height: calc(var(--building-spritesheet-height) / var(--building-spritesheet-rows) * var(--building-spritesheet-scale));
    --building-small-scale: calc(0.5 * var(--scale));
    --building-small-width: calc(var(--building-width) * var(--building-small-scale));
    --building-small-height: calc(var(--building-height) * var(--building-small-scale));
    --building-header-small-height: calc(62px * var(--building-small-scale));

    --wonder-spritesheet-width: 1845px;
    --wonder-spritesheet-height: 720px;
    --wonder-spritesheet-columns: 5;
    --wonder-spritesheet-rows: 3;
    --wonder-width: calc(var(--wonder-spritesheet-width) / var(--wonder-spritesheet-columns));
    --wonder-height: calc(var(--wonder-spritesheet-height) / var(--wonder-spritesheet-rows));
    --wonder-border-radius: 15px;
    --wonder-small-scale: calc(0.58 * var(--scale));
    --wonder-plus-age-card-scale: 1.1;

    --progress-token-spritesheet-width: 800px;
    --progress-token-spritesheet-height: 600px;
    --progress-token-spritesheet-columns: 4;
    --progress-token-spritesheet-rows: 3;
    --progress-token-width: calc(var(--progress-token-spritesheet-width) / var(--progress-token-spritesheet-columns));
    --progress-token-height: calc(var(--progress-token-spritesheet-height) / var(--progress-token-spritesheet-rows));
    --progress-token-small-scale: calc(0.4 * (0.5 / 0.63) * var(--scale)); /* (0.5 / 0.63) Because board used to be scale 0.63 and now is 0.5 */

    --linked-building-icon-spritesheet-width: 288px;
    --linked-building-icon-spritesheet-height: 64px;
    --linked-building-icon-spritesheet-columns: 9;
    --linked-building-icon-spritesheet-rows: 2;
    --linked-building-icon-width: calc(var(--linked-building-icon-spritesheet-width) / var(--linked-building-icon-spritesheet-columns));
    --linked-building-icon-height: calc(var(--linked-building-icon-spritesheet-height) / var(--linked-building-icon-spritesheet-rows));
    --linked-building-icon-small-scale: calc(0.45 * var(--scale));

    --board-width: 268px;
    --board-height: 949px;
    --board-scale: calc(0.75 * var(--scale));
    --military-token-scale: calc(0.5 * var(--scale));

    --small-border-radius: 7px;

    --draftpool-row-height-multiplier: 0.536;
    --draftpool-column-width: calc(var(--building-width) * var(--building-small-scale) * 0.6);
    --draftpool-row-height: calc(var(--building-height) * var(--building-small-scale) * var(--draftpool-row-height-multiplier));

    --military-track-header: 0.0414;
    --military-track-body: 0.87;
    --conflict-pawn-position: 0; /* -9 to 9 */
}

/*
  ____                           _
 / ___| ___ _ __   ___ _ __ __ _| |
| |  _ / _ \ '_ \ / _ \ '__/ _` | |
| |_| |  __/ | | |  __/ | | (_| | |
 \____|\___|_| |_|\___|_|  \__,_|_|
 */

/*html {*/
/*    background-image: none !important;*/
/*    background-color: black;*/
/*}*/

/*.whiteblock {*/
/*    background-image: none !important;*/
/*    !*background: url('https://en.1.studio.boardgamearena.com:8083/data/themereleases/200730-1036/img/layout/back-main.jpg') !important;*!*/
/*    background-color: white;*/
/*}*/

#game_play_area {

}

#game_play_area h3 {
    margin: 0 0 var(--gutter) 0;
    font-size: max(12px, calc(16px * var(--scale)));
}

#game_play_area .whiteblock h3 {
    /* Borrowed from Potion Explosion */
    text-shadow: 1px 1px 1px #FFFFFF;
}

#game_play_area .bgabutton {
    padding: var(--gutter) !important;
}

#game_play_area .bgabutton_darkgray {
    cursor: not-allowed;
}

#game_play_area .whiteblock {
    border-radius: 8px;
    padding: var(--gutter);
    margin: 0;
}

.opponent .coin, .coin.opponent {
    background-image: url('img/tmp_coin_opponent.png');
}

.coin.animated {
    position: absolute;
    z-index: 100;
}

.resource, .coin {
    background-image: url('img/tmp_coin.png');
    width: calc(var(--scale) * var(--element-scale) * 30px);
    height: calc(var(--scale) * var(--element-scale) * 30px);
    background-size: calc(var(--scale) * var(--element-scale) * 30px) calc(var(--scale) * var(--element-scale) * 30px);
    display: inline-block;
    text-align: center;
    border-radius: calc(30px * 0.5);
    box-shadow: calc(var(--scale) * 1px) calc(var(--scale) * 1px) calc(var(--scale) * 3px) 0 rgba(0, 0, 0, 0.4),
    inset 0 0 0 calc(var(--scale) * 1px) #00000060;
    backface-visibility: hidden;
}

.resource > span, .coin > span {
    font-weight: bold;
    font-size: calc(var(--scale) * var(--element-scale) * 20px);
    line-height: calc(var(--scale) * var(--element-scale) * 30px) !important;
    text-shadow: 0 0 calc(var(--scale) * 6px) white, 0 0 calc(var(--scale) * 6px) white, 0 0 calc(var(--scale) * 6px) white;
    color: black;
    cursor: default;
}

.wood {
    background-image: url('img/tmp_wood.png');
}

.clay {
    background-image: url('img/tmp_clay.png');
}

.stone {
    background-image: url('img/tmp_stone.png');
}

.glass {
    background-image: url('img/tmp_glass.png');
}

.papyrus {
    background-image: url('img/tmp_papyrus.png');
}

.glass, .papyrus {
    border-radius: unset;
    box-shadow: none;
    filter: drop-shadow(0px 0px calc(var(--scale) * 1px) #000000);
}

.current_player_is_active .coin > span {
    cursor: pointer;
}

.point {
    background-image: url('img/tmp_point.png');
    width: calc(var(--scale) * var(--element-scale) * 30px);
    height: calc(var(--scale) * var(--element-scale) * 30px);
    background-size: calc(var(--scale) * var(--element-scale) * 30px) calc(var(--scale) * var(--element-scale) * 30px);
    text-align: center;
    position: absolute;
    z-index: 10; /* Fly over military track during end game animation */
}

.point > span {
    font-weight: bold;
    font-size: calc(var(--scale) * var(--element-scale) * 20px);
    line-height: calc(var(--scale) * var(--element-scale) * 30px) !important;
    text-shadow: 0 0 calc(var(--scale) * 3px) black, 0 0 calc(var(--scale) * 3px) black;
    color: white;
    cursor: default;
}

@keyframes tooltipWiggle {
    from {
        transform: perspective(40em) rotateY(-18deg) scale(0.93); /* The 0.95 makes the graphic fit the tooltip better */
        animation-timing-function: ease-in-out;
    }
    to {
        transform: perspective(40em) rotateY(-10deg) scale(0.93); /* The 0.95 makes the graphic fit the tooltip better */
        animation-timing-function: ease-in-out;
    }
}

@keyframes glow {
    from {
        box-shadow: 0 0 5px 4px #f1dec8;
    }
    to {
        box-shadow: 0 0 5px 6px #f1dec8;
    }
}

.endgame_highlight {
    animation: endgame_highlight 0.5s infinite alternate;
    z-index: 200;
}

@keyframes endgame_highlight {
    from {
        outline-color: #ff000066;
        outline-width: calc(10px * var(--scale));
        outline-style: double;
        outline-offset: calc(1px * var(--scale));
    }
    to {
        outline-color: #ff0000;
        outline-width: calc(10px * var(--scale));
        outline-style: double;
        outline-offset: calc(4px * var(--scale));
    }
}

.red_border {
    animation: red_border 0.5s infinite alternate;
    z-index: 20;
}

@keyframes red_border {
    from {
        outline-color: #ff000066;
        outline-width: 3px;
        outline-style: dashed;
        outline-offset: 1px;
    }
    to {
        outline-color: #ff0000;
        outline-width: 3px;
        outline-style: dashed;
        outline-offset: 1px;
    }
}

/*
 _                            _   
| |    __ _ _   _  ___  _   _| |_ 
| |   / _` | | | |/ _ \| | | | __|
| |__| (_| | |_| | (_) | |_| | |_ 
|_____\__,_|\__, |\___/ \__,_|\__|
            |___/                 
 */

#swd_wrap {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

#layout_flexbox {
    /* Use flexbox properties https://www.youtube.com/watch?v=JJSoEo8JSnc */
    display: flex;
    flex-direction: row;
    justify-content: center;
}

#wonder_column {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
}

#wonder_column > div:first-child .player_wonders {
    /* Space between the two player areas with wonders, relevant in square mode where they would otherwise touch. */
    margin-bottom: var(--gutter);
}

.card_outline:empty, .card_outline.science_progress {
    box-shadow: inset 0 0 calc(var(--scale) * 4px) calc(var(--scale) * 1px) #00000029;
    border-radius: var(--small-border-radius);
}

.progress_token_outline {
    box-shadow: inset 0 0 calc(var(--scale) * 4px) calc(var(--scale) * 1px) #00000029;
    border-radius: calc(var(--progress-token-width) * var(--progress-token-small-scale) * 0.5);
}


#wonder_selection_block {
    display: none;
}

#swd[data-state=selectWonder] #wonder_selection_block {
    display: block;
}

#wonder_selection_container > div {
    width: calc(var(--wonder-small-scale) * var(--wonder-width));
    height: calc(var(--wonder-small-scale) * var(--wonder-height));
    float: left;
    --wonder-small-scale: calc(0.8 * var(--scale));
}

#wonder_selection_container > div:nth-of-type(1), #wonder_selection_container > div:nth-of-type(2) {
    margin-bottom: var(--gutter);
}

#wonder_selection_container > div:nth-of-type(1), #wonder_selection_container > div:nth-of-type(3) {
    margin-right: var(--gutter);
}

.current_player_is_active #wonder_selection_container .wonder {
    cursor: pointer;
}

#middle_column {
    text-align: center;

    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;

    width: calc(7 * var(--building-small-width) + 6 * 2px + 2 * var(--gutter)); /* This keeps content in the middle_column, especially something like select_start_player within the allowed size. */
}

#board_column {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    flex-wrap: wrap;
}

#swd_wrap.portrait #board_column {
    /* Specific width so layout_flexbox becomes the same width as player_wonders_mobile_container_ div. */
    width: calc(220px * var(--scale));
}

#swd_wrap.square #board_column, #swd_wrap.landscape #board_column {
    /* Specific width so layout_flexbox becomes the same width as player_wonders_mobile_container_ div. */
    width: calc(225px * var(--scale));
}

/*
 ____                      _
| __ )  ___   __ _ _ __ __| |
|  _ \ / _ \ / _` | '__/ _` |
| |_) | (_) | (_| | | | (_| |
|____/ \___/ \__,_|_|  \__,_|
 */

#board_container {
    position: relative;
    display: inline-block;
    align-self: flex-end;
}

.board, #board_container {
    width: calc(var(--board-width) * var(--board-scale));
    height: calc(var(--board-height) * var(--board-scale));
}

.board {
    background-image: url('img/board.png');
    background-size: calc(var(--board-width) * var(--board-scale)) calc(var(--board-height) * var(--board-scale));
    /*border-radius: var(--small-border-radius);*/
    filter: drop-shadow(0px 0px calc(var(--scale) * 1.5px) #000000);
    position: absolute;
    display: inline-block;
}

.pawn {
    background-image: url('img/tmp_conflict_pawn.png');
    width: calc(var(--scale) * 80px);
    height: calc(var(--scale) * 29px);
    background-size: calc(var(--scale) * 80px) calc(var(--scale) * 29px);
    left: calc(var(--scale) * 45px);
    top: calc((var(--military-track-header) + (var(--conflict-pawn-position) + 9) / 18 * var(--military-track-body)) * var(--board-height) * var(--board-scale));
    /*border-radius: var(--small-border-radius);*/
    filter: drop-shadow(0px 0px calc(var(--scale) * 1.5px) #000000);
    position: absolute;
    display: inline-block;
    z-index: 3;
}


#board_progress_tokens {
    --element-scale: 1.1;
    position: relative;
    top: calc(var(--board-height) * var(--board-scale) * 0.25);
    left: calc(var(--board-width) * var(--board-scale) * 0.635);
    width: calc(var(--progress-token-width) * var(--progress-token-small-scale) * var(--element-scale));
    height: calc(var(--board-height) * var(--board-scale) * 0.5);
}

#board_progress_tokens > div {
    position: absolute;
    width: calc(var(--progress-token-width) * var(--progress-token-small-scale));
    height: calc(var(--progress-token-width) * var(--progress-token-small-scale));
}

#board_progress_tokens > div:nth-of-type(1) {

}

#board_progress_tokens > div:nth-of-type(2) {
    top: calc(var(--board-height) * var(--board-scale) * 0.10);
}

#board_progress_tokens > div:nth-of-type(3) {
    top: calc(var(--board-height) * var(--board-scale) * 0.20);
}

#board_progress_tokens > div:nth-of-type(4) {
    top: calc(var(--board-height) * var(--board-scale) * 0.30);
}

#board_progress_tokens > div:nth-of-type(5) {
    top: calc(var(--board-height) * var(--board-scale) * 0.40);
}


#military_tokens > div {
    position: absolute;
}

#military_tokens > div:nth-of-type(1) {
    left: calc(var(--board-width) * var(--board-scale) * 0.0775);
    top: calc(var(--board-height) * var(--board-scale) * 0.104);
}

#military_tokens > div:nth-of-type(2) {
    left: calc(var(--board-width) * var(--board-scale) * 0.095);
    top: calc(var(--board-height) * var(--board-scale) * 0.257);
}

#military_tokens > div:nth-of-type(3) {
    left: calc(var(--board-width) * var(--board-scale) * 0.095);
    top: calc(var(--board-height) * var(--board-scale) * 0.643);
}

#military_tokens > div:nth-of-type(4) {
    left: calc(var(--board-width) * var(--board-scale) * 0.0775);
    top: calc(var(--board-height) * var(--board-scale) * 0.778);
}

.military_token {
    filter: drop-shadow(0px 0px calc(var(--scale) * 1.5px) #000000);
    position: relative;
    /*display: inline-block;*/
}

.military_token_2 {
    background-image: url('img/tmp_military_token_2.png');
    width: calc(var(--military-token-scale) * 61px);
    height: calc(var(--military-token-scale) * 141px);
    background-size: calc(var(--military-token-scale) * 61px) calc(var(--military-token-scale) * 141px);
}

.military_token_5 {
    background-image: url('img/tmp_military_token_5.png');
    width: calc(var(--military-token-scale) * 73px);
    height: calc(var(--military-token-scale) * 167px);
    background-size: calc(var(--military-token-scale) * 73px) calc(var(--military-token-scale) * 167px);
}

.board_player_left, .board_player_right {
    position: relative;
    display: inline-block;
    top: 40px;
}

.board_player_right {
    float: right;
}

/*
 ____             __ _                     _
|  _ \ _ __ __ _ / _| |_ _ __   ___   ___ | |
| | | | '__/ _` | |_| __| '_ \ / _ \ / _ \| |
| |_| | | | (_| |  _| |_| |_) | (_) | (_) | |
|____/|_|  \__,_|_|  \__| .__/ \___/ \___/|_|
                        |_|
 */

#draftpool_container {
    padding: var(--gutter);
    display: inline-block;
}

.draftpool {
    position: relative;
    left: var(--gutter); /* Happens to be te space we need to center the draftpool */
    margin: calc(2 * var(--gutter)) 0px calc(2.5 * var(--gutter)) 0px;

    /* Height is being set by updateDraftpool */

    /* 5px for rightmost card's shadow, else it will look too narrox. */
    width: calc(var(--draftpool-column-width) * 10 + var(--building-small-width) + calc(var(--scale) * 5px));
}

.glow {
    animation: glow 0.5s infinite alternate;
}

.draftpool_building_cost {
    position: relative;
}

.draftpool_building_cost.opponent {
    top: calc(var(--building-height) * var(--building-small-scale) * 0.73);
}

.draftpool_building_cost.me {
    top: calc(var(--building-height) * var(--building-small-scale) * 0.80);
}

.draftpool_building_cost .coin {
    --element-scale: 0.85;
}

#draftpool_actions {
    text-align: center;
    visibility: hidden;
}

#draftpool_actions > a > div {
    margin-right: var(--gutter);
}

#draftpool_actions > a {
    margin: 0;
    height: calc(34px * var(--scale));
    font-size: calc(14px * var(--scale));
    line-height: calc(34px * var(--scale));
}

#buttonConstructWonder {
    float: left;
}

#buttonDiscardBuilding {
    float: right;
}

#buttonDiscardBuilding .coin {
    --element-scale: calc(2.0 - var(--scale));
}

#buttonDiscardBuilding .coin > span {

}

#draftpool .column1 {
    left: calc(var(--draftpool-column-width) * (1 - 1));
}

#draftpool .column2 {
    left: calc(var(--draftpool-column-width) * (2 - 1));
}

#draftpool .column3 {
    left: calc(var(--draftpool-column-width) * (3 - 1));
}

#draftpool .column4 {
    left: calc(var(--draftpool-column-width) * (4 - 1));
}

#draftpool .column5 {
    left: calc(var(--draftpool-column-width) * (5 - 1));
}

#draftpool .column6 {
    left: calc(var(--draftpool-column-width) * (6 - 1));
}

#draftpool .column7 {
    left: calc(var(--draftpool-column-width) * (7 - 1));
}

#draftpool .column8 {
    left: calc(var(--draftpool-column-width) * (8 - 1));
}

#draftpool .column9 {
    left: calc(var(--draftpool-column-width) * (9 - 1));
}

#draftpool .column10 {
    left: calc(var(--draftpool-column-width) * (10 - 1));
}

#draftpool .column11 {
    left: calc(var(--draftpool-column-width) * (11 - 1));
}

#draftpool .row1 {
    top: calc(var(--draftpool-row-height) * (1 - 1));
}

#draftpool .row2 {
    top: calc(var(--draftpool-row-height) * (2 - 1));
}

#draftpool .row3 {
    top: calc(var(--draftpool-row-height) * (3 - 1));
}

#draftpool .row4 {
    top: calc(var(--draftpool-row-height) * (4 - 1));
}

#draftpool .row5 {
    top: calc(var(--draftpool-row-height) * (5 - 1));
}

#draftpool .row6 {
    top: calc(var(--draftpool-row-height) * (6 - 1));
}

#draftpool .row7 {
    top: calc(var(--draftpool-row-height) * (7 - 1));
}

/*
 ____  _             _           _                                  _           _   _
/ ___|| |_ __ _ _ __| |_   _ __ | | __ _ _   _  ___ _ __   ___  ___| | ___  ___| |_(_) ___  _ __
\___ \| __/ _` | '__| __| | '_ \| |/ _` | | | |/ _ \ '__| / __|/ _ \ |/ _ \/ __| __| |/ _ \| '_ \
 ___) | || (_| | |  | |_  | |_) | | (_| | |_| |  __/ |    \__ \  __/ |  __/ (__| |_| | (_) | | | |
|____/ \__\__,_|_|   \__| | .__/|_|\__,_|\__, |\___|_|    |___/\___|_|\___|\___|\__|_|\___/|_| |_|
                          |_|            |___/
 */

#select_start_player {
    display: none;
}

.current_player_is_active #swd[data-state=selectStartPlayer] #select_start_player {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

#select_start_player > .action_button > img {
    margin-right: var(--gutter);
}

#select_start_player > div {
    margin: 0 var(--gutter) 0 var(--gutter);
    word-wrap: break-spaces;
    line-height: calc(18px * var(--scale));
    font-size: calc(16px * var(--scale));
    height: calc(36px * var(--scale));
    display: inline-block;
    max-width: 60%;
    font-weight: bold;
}

#select_start_player > .action_button {
    margin: 0;
    height: calc(34px * var(--scale));
    line-height: calc(34px * var(--scale));
    text-overflow: unset;
}

#buttonPlayerLeft {
    float: left;
}

#buttonPlayerRight {
    float: right;
}

/*
  ____ _                                                                      _        _                 __                       _
 / ___| |__   ___   ___  ___  ___   _ __  _ __ ___   __ _ _ __ ___  ___ ___  | |_ ___ | | _____ _ __    / _|_ __ ___  _ __ ___   | |__   _____  __
| |   | '_ \ / _ \ / _ \/ __|/ _ \ | '_ \| '__/ _ \ / _` | '__/ _ \/ __/ __| | __/ _ \| |/ / _ \ '_ \  | |_| '__/ _ \| '_ ` _ \  | '_ \ / _ \ \/ /
| |___| | | | (_) | (_) \__ \  __/ | |_) | | | (_) | (_| | | |  __/\__ \__ \ | || (_) |   <  __/ | | | |  _| | | (_) | | | | | | | |_) | (_) >  <
 \____|_| |_|\___/ \___/|___/\___| | .__/|_|  \___/ \__, |_|  \___||___/___/  \__\___/|_|\_\___|_| |_| |_| |_|  \___/|_| |_| |_| |_.__/ \___/_/\_\
                                   |_|              |___/
 */

#progress_token_from_box {
    display: none;
}

#swd[data-state=chooseProgressTokenFromBox] #progress_token_from_box {
    display: block;
}

.current_player_is_active #progress_token_from_box_container .progress_token {
    cursor: pointer;
}

#progress_token_from_box_container > div {
    display: inline-block;
    --progress-token-small-scale: calc(0.5 * var(--scale));
    width: calc(var(--progress-token-width) * var(--progress-token-small-scale));
    height: calc(var(--progress-token-height) * var(--progress-token-small-scale));
}

#progress_token_from_box_container > div:not(:last-child) {
    margin-right: var(--gutter);
}

/*
 ____  _                            _
|  _ \| | __ _ _   _  ___ _ __     / \   _ __ ___  __ _
| |_) | |/ _` | | | |/ _ \ '__|   / _ \ | '__/ _ \/ _` |
|  __/| | (_| | |_| |  __/ |     / ___ \| | |  __/ (_| |
|_|   |_|\__,_|\__, |\___|_|    /_/   \_\_|  \___|\__,_|
               |___/
 */

.player_info_sub {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.player_info {
    text-align: center;
}

.player_info.opponent {
    margin-bottom: var(--gutter) !important;
}

.player_info.me {
    margin-top: var(--gutter) !important;
}

#swd_wrap.portrait .player_info.opponent {
    border-radius: 0 0 var(--small-border-radius) 0;
}

#swd_wrap.portrait .player_info.me {
    border-radius: 0 var(--small-border-radius) 0 0;
}

#swd_wrap.square .player_info, #swd_wrap.landscape .player_info {
    border-radius: 0 var(--small-border-radius) var(--small-border-radius) 0;
}

.player_area_name {
    position: relative;
    display: inline-block;
    width: 75%;
    text-align: center;
}

.player_area_name h3 {
    margin: 0 !important;
}

.player_buildings.me {
    align-items: flex-start;
}

.player_buildings {
    min-height: calc(150px * var(--scale));

    width: calc(7 * var(--building-small-width) + 6 * 2px);
    /* Flexbox setup */
    display: flex;
    flex-direction: row;
    align-items: flex-end;
    justify-content: space-between;
}

#swd_wrap.square .player_buildings.opponent, #swd_wrap.landscape .player_buildings.opponent {
    border-radius: 0 0 var(--small-border-radius) 0;
}

#swd_wrap.square .player_buildings.me, #swd_wrap.landscape .player_buildings.me {
    border-radius: 0 var(--small-border-radius) 0 0;
}

#swd_wrap.portrait .player_buildings.opponent {
    border-radius: 0 0 var(--small-border-radius) var(--small-border-radius);
}

#swd_wrap.portrait .player_buildings.me {
    border-radius: var(--small-border-radius) var(--small-border-radius) 0 0;
}

.player_building_column {
    display: flex;
    flex-direction: column;
    min-width: var(--building-small-width);
    min-height: var(--building-header-small-height);
    border-radius: var(--small-border-radius);
    background-size: var(--building-small-width) var(--building-header-small-height) !important;
    background-repeat: no-repeat !important;
    background-position: bottom !important;
    margin: 0 1px 0 1px;
}

.player_buildings.opponent .player_building_column {
    background-position: bottom !important;
    flex-direction: column-reverse;
}

.player_buildings.me .player_building_column {
    background-position: top !important;
}

/* Gradients for opponent */
.player_buildings.opponent .player_building_column.Brown {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#702c12+0,702c12+100&0+0,0.4+100 */
    background: linear-gradient(to bottom, rgba(112, 44, 18, 0) 0%, rgba(112, 44, 18, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.opponent .player_building_column.Grey {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#858680+0,858680+100&0+0,0.4+100 */
    background: linear-gradient(to bottom, rgba(133, 134, 128, 0) 0%, rgba(133, 134, 128, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.opponent .player_building_column.Yellow {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#f8b305+0,f8b305+100&0+0,0.4+100 */
    background: linear-gradient(to bottom, rgba(248, 179, 5, 0) 0%, rgba(248, 179, 5, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.opponent .player_building_column.Blue {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#0275aa+0,0275aa+100&0+0,0.4+100 */
    background: linear-gradient(to bottom, rgba(2, 117, 170, 0) 0%, rgba(2, 117, 170, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.opponent .player_building_column.Red {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#b7110e+0,b7110e+100&0+0,0.4+100 */
    background: linear-gradient(to bottom, rgba(183, 17, 14, 0) 0%, rgba(183, 17, 14, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.opponent .player_building_column.Green {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#027234+0,027234+100&0+0,0.4+100 */
    background: linear-gradient(to bottom, rgba(2, 114, 52, 0) 0%, rgba(2, 114, 52, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.opponent .player_building_column.Purple {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#6f488b+0,6f488b+100&0+0,0.4+100 */
    background: linear-gradient(to bottom, rgba(111, 72, 139, 0) 0%, rgba(111, 72, 139, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

/* Gradients for me */
.player_buildings.me .player_building_column.Brown {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#702c12+0,702c12+100&0+0,0.4+100 */
    background: linear-gradient(to top, rgba(112, 44, 18, 0) 0%, rgba(112, 44, 18, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.me .player_building_column.Grey {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#858680+0,858680+100&0+0,0.4+100 */
    background: linear-gradient(to top, rgba(133, 134, 128, 0) 0%, rgba(133, 134, 128, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.me .player_building_column.Yellow {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#f8b305+0,f8b305+100&0+0,0.4+100 */
    background: linear-gradient(to top, rgba(248, 179, 5, 0) 0%, rgba(248, 179, 5, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.me .player_building_column.Blue {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#0275aa+0,0275aa+100&0+0,0.4+100 */
    background: linear-gradient(to top, rgba(2, 117, 170, 0) 0%, rgba(2, 117, 170, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.me .player_building_column.Red {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#b7110e+0,b7110e+100&0+0,0.4+100 */
    background: linear-gradient(to top, rgba(183, 17, 14, 0) 0%, rgba(183, 17, 14, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.me .player_building_column.Green {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#027234+0,027234+100&0+0,0.4+100 */
    background: linear-gradient(to top, rgba(2, 114, 52, 0) 0%, rgba(2, 114, 52, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.me .player_building_column.Purple {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#6f488b+0,6f488b+100&0+0,0.4+100 */
    background: linear-gradient(to top, rgba(111, 72, 139, 0) 0%, rgba(111, 72, 139, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.science_progress {
    order: 99;
    height: calc(var(--building-header-small-height) * 0.75) !important;
    line-height: calc(var(--building-header-small-height) * 0.75);

    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;

    font-size: calc(14px * var(--scale));
    font-weight: bold;
    color: #006c2f;
    text-shadow: 1px 1px 1px #FFFFFF;
}

.science_progress span {
    cursor: default;
    pointer-events: none;
}

#swd_wrap.portrait .player_wonders.opponent {
    border-radius: var(--small-border-radius) var(--small-border-radius) 0 0;
}

#swd_wrap.portrait .player_wonders.me {
    border-radius: 0 0 var(--small-border-radius) var(--small-border-radius);
}

#swd_wrap.square .player_wonders.opponent, #swd_wrap.landscape .player_wonders.opponent {
    border-radius: var(--small-border-radius) 0 var(--small-border-radius) var(--small-border-radius);
}

#swd_wrap.square .player_wonders.me, #swd_wrap.landscape .player_wonders.me {
    border-radius: var(--small-border-radius) var(--small-border-radius) 0 var(--small-border-radius);
}

.player_wonders .wonder_small {
    z-index: 2;
    position: absolute;
}

.player_wonders .age_card_container {
    position: relative;
    top: calc(-10px * var(--scale));
    left: calc(103px * var(--scale));
    width: var(--building-small-width);
    height: var(--building-small-height);
}

/* So during wonder selection, during the sliding animation the player wonder will be on top of the selection wonders. And when constructing a wonder the age card will be on top of the other draftpool cards. */
.player_wonders .wonder_container {
    z-index: 10;
}

.player_wonders .wonder_container .card_outline {
    position: absolute;
    top: calc(17px * var(--scale));
    left: calc(76px * var(--scale));
    width: var(--building-small-height);
    height: var(--building-small-width);
}

.player_wonders .red_border {
    cursor: pointer;
}

.player_wonders .age_card_container .building_small {
    position: absolute;
    transform: rotate(-90deg);
}

.player_wonder_cost {
    left: calc(var(--wonder-width) * var(--wonder-small-scale) * 0.99);
    top: calc(var(--wonder-height) * var(--wonder-small-scale) * 0.4);
    position: absolute;
    z-index: 2;
}

.player_wonder_cost .coin {
    --element-scale: 0.85;
}

#swd_wrap.square .player_wonders {
    width: calc(var(--wonder-small-scale) * var(--wonder-width) * var(--wonder-plus-age-card-scale));
    height: calc(4 * var(--wonder-small-scale) * var(--wonder-height) + 3 * var(--gutter));
}

#swd_wrap.landscape .player_wonders {
    width: calc(2 * var(--wonder-small-scale) * var(--wonder-width) * var(--wonder-plus-age-card-scale) + 1 * var(--gutter));
    height: calc(2 * var(--wonder-small-scale) * var(--wonder-height) + 1 * var(--gutter));
}

#swd_wrap.portrait .player_wonders {
    min-width: calc(4 * var(--wonder-small-scale) * var(--wonder-width) * var(--wonder-plus-age-card-scale) + 3 * var(--gutter));
    height: calc(var(--wonder-small-scale) * var(--wonder-height));
}

.player_wonders {
    position: relative;

    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    justify-content: space-between;
}

.player_wonders > div:not(:last-child) {
    margin-right: var(--gutter);
}

.player_wonders > div {
    width: calc(var(--wonder-small-scale) * var(--wonder-width) * var(--wonder-plus-age-card-scale));
    height: calc(var(--wonder-small-scale) * var(--wonder-height));
}

.player_area_progress_tokens {
    display: inline-block;
    text-align: center;
    position: relative;
}

.player_area_progress_tokens > div {
    display: inline-block;
    position: relative;
    width: calc(var(--progress-token-width) * var(--progress-token-small-scale));
    height: calc(var(--progress-token-height) * var(--progress-token-small-scale));
}

.player_area_progress_tokens > div:nth-of-type(4) > div, .player_area_progress_tokens > div:nth-of-type(5) > div, .player_area_progress_tokens > div:nth-of-type(6) > div {
    margin-bottom: calc(-12px * var(--scale));
}

.player_area_progress_tokens > div:nth-of-type(4), .player_area_progress_tokens > div:nth-of-type(5), .player_area_progress_tokens > div:nth-of-type(6) {
    position: relative;
    top: calc(-8px * var(--scale));
    margin-bottom: calc(-12px * var(--scale));
    display: none;
}

.player_area_coins {
    float: right;
    text-align: center;

    width: calc(var(--scale) * 30px);
    height: calc(var(--scale) * 30px);
}

.player_area_coins .coin {
    z-index: 105; /* So animated coins fly under it */
    position: relative; /* For the z-index to work */
}

.player_area_points {
    /* Define width/height to keep the same position when the points icon moves to the end game table. */
    width: calc(var(--scale) * 30px);
    height: calc(var(--scale) * 30px);
    position: relative;
    margin-left: var(--gutter);
}

/*
 ____  _                            _        _   _
|  _ \| | __ _ _   _  ___ _ __     / \   ___| |_(_) ___  _ __  ___
| |_) | |/ _` | | | |/ _ \ '__|   / _ \ / __| __| |/ _ \| '_ \/ __|
|  __/| | (_| | |_| |  __/ |     / ___ \ (__| |_| | (_) | | | \__ \
|_|   |_|\__,_|\__, |\___|_|    /_/   \_\___|\__|_|\___/|_| |_|___/
               |___/
 */

.action_construct {
    background-image: url('img/tmp_construct_building_icon.png');
    /*background-position: -0px -170px;*/
    background-size: calc(90px * var(--scale)) calc(32px * var(--scale));
    width: calc(90px * var(--scale));
    height: calc(32px * var(--scale));
}

.action_wonder {
    background-image: url('img/tmp_construct_wonder_icon.png');
    background-size: calc(41px * var(--scale)) calc(34px * var(--scale));
    width: calc(41px * var(--scale));
    height: calc(34px * var(--scale));
}

.action_button * {
    display: inline-block;
    vertical-align: middle;
    pointer-events: none;
    font-size: calc(14px * var(--scale));
}

.action_button .emblem {
    width: calc(34px * var(--scale));
    height: calc(34px * var(--scale));
}

/*
 ____        _ _     _ _
| __ ) _   _(_) | __| (_)_ __   __ _ ___
|  _ \| | | | | |/ _` | | '_ \ / _` / __|
| |_) | |_| | | | (_| | | | | | (_| \__ \
|____/ \__,_|_|_|\__,_|_|_| |_|\__, |___/
                               |___/
 */
.building {
    width: calc(var(--building-width) * var(--scale));
    height: calc(var(--building-height) * var(--scale));
    background-size: calc(var(--building-width) * var(--building-spritesheet-columns) * var(--scale)) calc(var(--building-height) * var(--building-spritesheet-rows) * var(--scale));
    background-image: url('img/buildings.jpg');
    border-radius: calc(14px * var(--scale));
    box-shadow: calc(var(--scale) * 5px) calc(var(--scale) * 5px) calc(var(--scale) * 5px) 0 rgba(0, 0, 0, 0.4),
    inset 0 0 0 calc(var(--scale) * 1px) #00000060;
    display: inline-block;
    position: relative;
}

.building_header_small {
    width: var(--building-small-width);
    height: var(--building-header-small-height);
    background-size: calc(var(--building-width) * var(--building-spritesheet-columns) * var(--building-small-scale)) calc(var(--building-height) * var(--building-spritesheet-rows) * var(--building-small-scale));
    border-radius: var(--small-border-radius);
    box-shadow: 0 0 calc(var(--scale) * 3px) calc(var(--scale) * 1px) rgba(0, 0, 0, 0.4),
    inset 0 0 0 calc(var(--scale) * 0.5px) #00000060;
    display: block;
    position: relative; /* For the sliding animation (draftpool to player area) to work */
    z-index: 15; /* So they are on top of the draftpool buildings during animation */
}

.building_header_small_container {
    width: var(--building-small-width);
    height: var(--building-header-small-height);
    display: block;
}

/* Put some margin between borders, mostly to prevent misclicks on mobile. Doesn't include current_player_is_active / state so the position stays the same during the animation.
Because of reversing the flexbox order for the opponent there are 2 different rules.*/
.player_buildings.me .player_building_column.red_border .building_header_small_container:not(:last-child) {
    margin-bottom: calc(2 * var(--gutter));
}

.player_buildings.opponent .player_building_column.red_border .building_header_small_container:not(:first-child) {
    margin-bottom: calc(2 * var(--gutter));
}

.current_player_is_active #swd[data-state=chooseOpponentBuilding] .player_building_column.red_border .building_header_small {
    cursor: pointer;
}

.current_player_is_active #swd[data-state=playerTurn] #draftpool .building_small.available,
.current_player_is_active #swd[data-state=client_useAgeCard] #draftpool .building_small.available {
    cursor: pointer;
}

.building_small {
    width: var(--building-small-width);
    height: var(--building-small-height);
    background-size: calc(var(--building-width) * var(--building-spritesheet-columns) * var(--building-small-scale)) calc(var(--building-height) * var(--building-spritesheet-rows) * var(--building-small-scale));
    border-radius: var(--small-border-radius);
    box-shadow: 0 0 calc(var(--scale) * 3px) calc(var(--scale) * 1px) rgba(0, 0, 0, 0.4),
    inset 0 0 0 calc(var(--scale) * 0.5px) #00000060;
    text-align: center;
    backface-visibility: hidden;
}

.age1_back {
    background-position: -300% -700%;
}

.age2_back {
    background-position: -400% -700%;
}

.age3_back {
    background-position: -500% -700%;
}

.guild_back {
    background-position: -600% -700%;
}

/*
__        __              _
\ \      / /__  _ __   __| | ___ _ __ ___
 \ \ /\ / / _ \| '_ \ / _` |/ _ \ '__/ __|
  \ V  V / (_) | | | | (_| |  __/ |  \__ \
   \_/\_/ \___/|_| |_|\__,_|\___|_|  |___/
 */

.wonder_container {
    display: inline-block;
    position: relative; /* Without this the wonder won't slide properly */
}

.wonder {
    width: calc(var(--wonder-width) * var(--scale));
    height: calc(var(--wonder-height) * var(--scale));
    background-size: calc(var(--wonder-spritesheet-width) * var(--scale)) calc(var(--wonder-spritesheet-height) * var(--scale));
    background-image: url('img/wonders.jpg');
    border-radius: calc(var(--wonder-border-radius) * var(--scale));
    box-shadow: calc(var(--scale) * 5px) calc(var(--scale) * 5px) calc(var(--scale) * 5px) 0 rgba(0, 0, 0, 0.4),
    inset 0 0 0 1px #00000060;

    /* Temporary: */
    display: inline-block;
    position: inherit;
}

.wonder_small {
    width: calc(var(--wonder-width) * var(--wonder-small-scale));
    height: calc(var(--wonder-height) * var(--wonder-small-scale));
    background-size: calc(var(--wonder-spritesheet-width) * var(--wonder-small-scale)) calc(var(--wonder-spritesheet-height) * var(--wonder-small-scale));
    border-radius: var(--small-border-radius);
    box-shadow: 0 0 calc(var(--scale) * 3px) calc(var(--scale) * 1px) rgba(0, 0, 0, 0.4),
    inset 0 0 0 calc(var(--scale) * 0.5px) #00000060;
    text-align: center;
}

.swd_title {
    font-family: "PossumSaltareNF";
    text-align: center;
    text-transform: uppercase;
}

.building .swd_title {
    position: absolute;
    top: 89%;
    font-size: calc(14px * var(--scale));
    display: block;
    margin-left: auto;
    margin-right: auto;
    width: calc(var(--building-width) * var(--scale));
}

.building_small .swd_title {
    top: 89.5%;
    font-size: calc(13.5px * var(--building-small-scale));
    margin-left: auto;
    margin-right: auto;
    width: var(--building-small-width);
}

.wonder .swd_title {
    position: relative;
    top: 86%;
    left: -3.5%;
    font-size: calc(16px * var(--scale));
    display: block;
}

.wonder_small .swd_title {
    font-size: calc(16px * var(--wonder-small-scale));
}

.progress_token .swd_title {
    font-size: calc(22px * var(--scale));
}

/*
 ____                                      _____     _
|  _ \ _ __ ___   __ _ _ __ ___  ___ ___  |_   _|__ | | _____ _ __  ___
| |_) | '__/ _ \ / _` | '__/ _ \/ __/ __|   | |/ _ \| |/ / _ \ '_ \/ __|
|  __/| | | (_) | (_| | | |  __/\__ \__ \   | | (_) |   <  __/ | | \__ \
|_|   |_|  \___/ \__, |_|  \___||___/___/   |_|\___/|_|\_\___|_| |_|___/
                 |___/
 */

.current_player_is_active #swd[data-state=chooseProgressToken] #board_progress_tokens .progress_token_small {
    cursor: pointer;
}

.progress_token {
    width: calc(var(--progress-token-width) * var(--scale));
    height: calc(var(--progress-token-height) * var(--scale));
    background-size: calc(var(--progress-token-spritesheet-width) * var(--scale)) calc(var(--progress-token-spritesheet-height) * var(--scale));
    background-image: url('img/progress_tokens.jpg');
    border-radius: calc(var(--progress-token-width) * 0.5);
    box-shadow: calc(var(--scale) * 5px) calc(var(--scale) * 5px) calc(var(--scale) * 5px) 0 rgba(0, 0, 0, 0.4),
    inset 0 0 0 calc(var(--scale) * 1px) #00000060;

    /* Temporary: */
    display: inline-block;
    position: inherit;
}

.progress_token_small {
    position: relative;
    z-index: 5;
    width: calc(var(--progress-token-width) * var(--progress-token-small-scale) * var(--element-scale));
    height: calc(var(--progress-token-height) * var(--progress-token-small-scale) * var(--element-scale));
    background-size: calc(var(--progress-token-spritesheet-width) * var(--progress-token-small-scale) * var(--element-scale)) calc(var(--progress-token-spritesheet-height) * var(--progress-token-small-scale) * var(--element-scale));
    border-radius: calc(var(--progress-token-width) * var(--progress-token-small-scale) * var(--element-scale) * 0.5);
    box-shadow: 0 0 calc(var(--scale) * 3px) calc(var(--scale) * 1px) rgba(0, 0, 0, 0.4),
    inset 0 0 0 calc(var(--scale) * 0.5px) #00000060;
}

.linked_building_icon {
    background-image: url('img/linked-building-icons.jpg');
    width: calc(var(--scale) * var(--element-scale) * var(--linked-building-icon-width));
    height: calc(var(--scale) * var(--element-scale) * var(--linked-building-icon-height));
    background-size: calc(var(--linked-building-icon-spritesheet-width) * var(--scale) * var(--element-scale)) calc(var(--linked-building-icon-spritesheet-height) * var(--scale) * var(--element-scale));
    border-radius: calc(var(--scale) * 3px);
    display: inline-block;
    box-shadow: calc(var(--scale) * 1px) calc(var(--scale) * 1px) calc(var(--scale) * 3px) 0 rgba(0, 0, 0, 0.4),
    inset 0 0 0 calc(var(--scale) * 1px) #00000060;
}

.linked_building_icon_small {
    width: calc(var(--linked-building-icon-width) * var(--linked-building-icon-small-scale));
    height: calc(var(--linked-building-icon-height) * var(--linked-building-icon-small-scale));
    background-size: calc(var(--linked-building-icon-spritesheet-width) * var(--linked-building-icon-small-scale)) calc(var(--linked-building-icon-spritesheet-height) * var(--linked-building-icon-small-scale));
    border-radius: calc(var(--scale) * 2px);
    position: absolute;
    left: calc(var(--building-small-width) * 0.55);
    top: calc(var(--scale) * 18px);
    z-index: 2;
    box-shadow: calc(var(--scale) * 1px) calc(var(--scale) * 1px) calc(var(--scale) * 1px) 0 rgba(0, 0, 0, 0.3),
    inset 0 0 0 calc(var(--scale) * 0.5px) #00000060;
}

.opponent .linked_building_icon_small {
    top: calc(var(--scale) * -7px);
}

/*
 ____  _                       _          _                     _
|  _ \(_)___  ___ __ _ _ __ __| | ___  __| |   ___ __ _ _ __ __| |___
| | | | / __|/ __/ _` | '__/ _` |/ _ \/ _` |  / __/ _` | '__/ _` / __|
| |_| | \__ \ (_| (_| | | | (_| |  __/ (_| | | (_| (_| | | | (_| \__ \
|____/|_|___/\___\__,_|_|  \__,_|\___|\__,_|  \___\__,_|_|  \__,_|___/
 */

#discarded_cards_whiteblock {
    margin-top: var(--gutter) !important;
    margin-left: auto !important;
    margin-right: auto !important;
    box-sizing: border-box;
}

#discarded_cards_container {
    margin: 0 calc(0px - var(--gutter)) calc(0px - var(--gutter)) 0;
}

#discarded_cards_container div {
    position: relative !important;
    display: inline-block;
    width: var(--building-small-width);
    height: var(--building-small-height);
    margin: 0 var(--gutter) var(--gutter) 0;
}

.current_player_is_active #swd[data-state=chooseDiscardedBuilding] #discarded_cards_container .building_small {
    cursor: pointer;
}

.discarded_cards_cursor {
    display: none !important;
}

/*
 _____           _    ____                        _____     _     _
| ____|_ __   __| |  / ___| __ _ _ __ ___   ___  |_   _|_ _| |__ | | ___
|  _| | '_ \ / _` | | |  _ / _` | '_ ` _ \ / _ \   | |/ _` | '_ \| |/ _ \
| |___| | | | (_| | | |_| | (_| | | | | | |  __/   | | (_| | |_) | |  __/
|_____|_| |_|\__,_|  \____|\__,_|_| |_| |_|\___|   |_|\__,_|_.__/|_|\___|

 */

#end_game_container {
    margin: var(--gutter) !important;
}

#end_game_container table {
    /* Trick to hide white borders on the outside of the table. */
    border-style: hidden;
}

#end_game_container td {
    border: calc(3px * var(--scale)) solid #ffffff88;
    padding: calc(5px * var(--scale)) calc(1px * var(--scale)) calc(5px * var(--scale)) calc(1px * var(--scale));

    font-size: calc(24px * var(--scale));
    font-weight: bold;
    /* Make all category columns same width */
    min-width: calc(var(--scale) * 58px);
    /* Keep table within width of middle column by keeping the first column narrow enough */
    max-width: calc(var(--scale) * 155px);
    /* Cut off player name if it's too long. */
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.end_game_player_name {
    font-size: calc(18px * var(--scale)) !important;
}

.end_game_icon {
    display: inline-block;
}

.end_game_card {
    background-size: calc(var(--scale) * 29px) calc(var(--scale) * 44px);
    width: calc(var(--scale) * 29px);
    height: calc(var(--scale) * 44px);
    background-color: initial !important;
}

.end_game_blue {
    color: #0074bcaa;
    background-color: #0074bc30;
    text-shadow: 0 0 0 #000000bb;
}

.end_game_blue .end_game_card {
    background-image: url('img/tmp_card_blue.png');
}

.end_game_green {
    color: #008d48aa;
    background-color: #008d4830;
    text-shadow: 0 0 0 #000000bb;
}

.end_game_green .end_game_card {
    background-image: url('img/tmp_card_green.png');
}

.end_game_yellow {
    color: #fccc14aa;
    background-color: #fccc1430;
    text-shadow: 0 0 0 #000000bb;
}

.end_game_yellow .end_game_card {
    background-image: url('img/tmp_card_yellow.png');
}

.end_game_purple {
    color: #7a5b92aa;
    background-color: #7a5b9230;
    text-shadow: 0 0 0 #000000bb;
}

.end_game_purple .end_game_card {
    background-image: url('img/tmp_card_purple.png');
}

.end_game_wonders {
    color: #f7c161aa;
    background-color: #f7c16130;
    text-shadow: 0 0 0 #000000bb;
}

.end_game_wonders .end_game_card {
    background-image: url('img/tmp_construct_wonder_icon.png');
    background-size: calc(var(--scale) * 58px) calc(var(--scale) * 44px);
    width: calc(var(--scale) * 58px);
    height: calc(var(--scale) * 44px);
}

.end_game_progresstokens {
    color: #1b6332aa;
    background-color: #1b633230;
    text-shadow: 0 0 0 #000000bb;
}

.end_game_progresstokens .end_game_card {
    background-image: url('img/tmp_end_game_progress.png');
    background-size: calc(var(--scale) * 44px) calc(var(--scale) * 44px);
    width: calc(var(--scale) * 44px);
    height: calc(var(--scale) * 44px);
}

.end_game_coins {
    color: #e0bd0eaa;
    background-color: #e0bd0e30;
    text-shadow: 0 0 0 #000000bb;
}

.end_game_coins .end_game_card {
    background-image: url('img/tmp_coin.png');
    background-size: calc(var(--scale) * 44px) calc(var(--scale) * 44px);
    width: calc(var(--scale) * 44px);
    height: calc(var(--scale) * 44px);
}

.end_game_military {
    color: #c21f2caa;
    background-color: #c21f2c30;
    text-shadow: 0 0 0 #000000bb;
}

.end_game_military .end_game_card {
    background-image: url('img/tmp_end_game_military.png');
    background-size: calc(var(--scale) * 44px) calc(var(--scale) * 44px);
    width: calc(var(--scale) * 44px);
    height: calc(var(--scale) * 44px);
}

.end_game_total {
    --element-scale: 1.4;
    width: calc(var(--scale) * var(--element-scale) * 30px);
    height: calc(var(--scale) * var(--element-scale) * 30px);
    position: relative;
    margin: auto;
}

#settings_whiteblock {
    margin-top: var(--gutter) !important;
    margin-left: auto !important;
    margin-right: auto !important;
    box-sizing: border-box;
}
.settings_table {
    font-size: max(14px, calc(16px * var(--scale)));
    line-height: max(16px, calc(28px * var(--scale)));
}
.settings_table tr td {
    vertical-align: top;
}
.settings_table tr td:first-of-type {
    white-space: nowrap;
}
.settings_table tr td:not(:last-of-type) {
    padding-right: var(--gutter);
}

/*
 _____           _ _   _
|_   _|__   ___ | | |_(_)_ __  ___
  | |/ _ \ / _ \| | __| | '_ \/ __|
  | | (_) | (_) | | |_| | |_) \__ \
  |_|\___/ \___/|_|\__|_| .__/|___/
                        |_|
 */

.swd_tooltip * {
    font-size: calc(var(--scale) * 14px);
}
.swd_tooltip {
    width: calc(var(--scale) * 700px);
    display: flex;
    justify-content: space-between;
}

.swd_tooltip > div {
    flex-grow: 1;
}

.swd_tooltip li {
    list-style: outside;
    margin-left: calc(25px * var(--scale));
}

.building_tooltip {

}

.wonder_tooltip {

}

.progress_token_tooltip {
    width: 500px;
}

.tooltipWiggle {
    animation: tooltipWiggle 2s infinite alternate;
    align-self: center;
}

.payment_plan {
    margin: var(--gutter) 0 var(--gutter) var(--gutter);
}

.payment_plan>div {
    vertical-align: middle;
}

/* font converted using font-converter.net. thank you! */
@font-face {
    font-family: "PossumSaltareNF";
    src: url("img/PossumSaltareNF.eot"); /* IE9 Compat Modes */
    src: url("img/PossumSaltareNF.eot?#iefix") format("embedded-opentype"), /* IE6-IE8 */ url("img/PossumSaltareNF.otf") format("opentype"), /* Open Type Font */ url("img/PossumSaltareNF.svg") format("svg"), /* Legacy iOS */ url("img/PossumSaltareNF.ttf") format("truetype"), /* Safari, Android, iOS */ url("img/PossumSaltareNF.woff") format("woff"), /* Modern Browsers */ url("img/PossumSaltareNF.woff2") format("woff2"); /* Modern Browsers */
    font-weight: normal;
    font-style: normal;
}

.list_of_cards {
    background-image: url('img/list_of_cards.png');
    width: calc(var(--scale) * 1004px);
    height: calc(var(--scale) * 829px);
    background-size: calc(var(--scale) * 1004px) calc(var(--scale) *  829px);
}
.list_of_cards_linked {
    background-image: url('img/list_of_cards_linked.png');
    width: calc(var(--scale) * 1004px);
    height: calc(var(--scale) * 945px);
    background-size: calc(var(--scale) * 1004px) calc(var(--scale) *  945px);
}

/* High-res 2X assets (retina): */
@media (-webkit-min-device-pixel-ratio: 2), (min-device-pixel-ratio: 2), (min-resolution: 192dpi)
{
    .building {
        background-image: url('img/buildings@2X.jpg');
    }
    .wonder {
        background-image: url('img/wonders@2X.jpg');
    }
    .progress_token {
        background-image: url('img/progress_tokens@2X.jpg');
    }
    .board {
        background-image: url('img/board@2X.png');
    }
    .linked_building_icon {
        background-image: url('img/linked-building-icons@2X.jpg');
    }
    .pawn {
        background-image: url('img/tmp_conflict_pawn@2X.png');
    }
    .military_token_2 {
        background-image: url('img/tmp_military_token_2@2X.png');
    }
    .military_token_5 {
        background-image: url('img/tmp_military_token_5@2X.png');
    }
    .coin {
        background-image: url('img/tmp_coin@2X.png');
    }
    .coin.opponent {
        background-image: url('img/tmp_coin_opponent@2X.png');
    }
    .wood {
        background-image: url('img/tmp_wood@2X.png');
    }
    .clay {
        background-image: url('img/tmp_clay@2X.png');
    }
    .stone {
        background-image: url('img/tmp_stone@2X.png');
    }
    .glass {
        background-image: url('img/tmp_glass@2X.png');
    }
    .papyrus {
        background-image: url('img/tmp_papyrus@2X.png');
    }
    .end_game_blue .end_game_card {
        background-image: url('img/tmp_card_blue@2X.png');
    }
    .end_game_green .end_game_card {
        background-image: url('img/tmp_card_green@2X.png');
    }
    .end_game_yellow .end_game_card {
        background-image: url('img/tmp_card_yellow@2X.png');
    }
    .end_game_purple .end_game_card {
        background-image: url('img/tmp_card_purple@2X.png');
    }
    .end_game_military .end_game_card {
        background-image: url('img/tmp_end_game_military@2X.png');
    }
    .end_game_progresstokens .end_game_card {
        background-image: url('img/tmp_end_game_progress@2X.png');
    }
    .end_game_coins .end_game_card {
        background-image: url('img/tmp_coin@2X.png');
    }
    .action_construct {
        background-image: url('img/tmp_construct_building_icon@2X.png');
    }
    .action_wonder {
        background-image: url('img/tmp_construct_wonder_icon@2X.png');
    }
    .point {
        background-image: url('img/tmp_point@2X.png');
    }
}
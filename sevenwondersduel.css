/**
 *------
 * BGA framework: © Gregory Isabelli <gisabelli@boardgamearena.com> & Emmanuel Colin <ecolin@boardgamearena.com>
 * SevenWondersDuel implementation : © Koen Heltzel <koenheltzel@gmail.com>
 *
 * This code has been produced on the BGA studio platform for use on http://boardgamearena.com.
 * See http://en.boardgamearena.com/#!doc/Studio for more information.
 * -----
 *
 * sevenwondersduel.css
 *
 * SevenWondersDuel stylesheet
 *
 */

/*
    This is the CSS stylesheet of your game User Interface.
    
    Styles defined on this file will be applied to the HTML elements you define in your
    HTML template (sevenwondersduel_sevenwondersduel.tpl), and to HTML elements you create dynamically
    (in sevenwondersduel.js).
    
    Usually, you are using CSS to:
    
    1°) define the overall layout of your game
        (ex: place the board on the top left, place player's hand beside, place the deck on the right, ...).

    2°) create your CSS-sprites:
        All images of your games should be gathered into a small number of image files. Then, using
        background-image and background-position CSS properties, you create HTML blocks that can 
        display these images correctly (see example below).
    
    3°) ... anything else:
        It is really easy to add and remove CSS classes dynamically from your Javascript with
        dojo.addClass and dojo.removeClass. It is also easy to check if an element has a class
        (dojo.hasClass) or to get all elements with a specific class (dojo.query). This is why,
        very often, using CSS classes for the logic of your user interface allow you to do complex
        thing easily.
        
        
     Note: on the production platform, this file will be compressed and comments will be removed.
           Consequently, don't hesitate to put as many comments as necessary.
*/


/* Note: you must not use any @import directive */


/********* You can start writing your CSS below this line: **********/


/*
__     __         _       _     _
\ \   / /_ _ _ __(_) __ _| |__ | | ___  ___
 \ \ / / _` | '__| |/ _` | '_ \| |/ _ \/ __|
  \ V / (_| | |  | | (_| | |_) | |  __/\__ \
   \_/ \__,_|_|  |_|\__,_|_.__/|_|\___||___/
*/

:root {
    --scale: 0.5;
    --gutter: calc(7.5px * var(--scale));

    --building-spritesheet-width: 2080px;
    --building-spritesheet-height: 2568px;
    --building-spritesheet-columns: 10;
    --building-spritesheet-rows: 8;
    --building-width: calc(var(--building-spritesheet-width) / var(--building-spritesheet-columns));
    --building-height: calc(var(--building-spritesheet-height) / var(--building-spritesheet-rows));
    --building-small-scale: calc(0.5 * var(--scale));
    --building-small-width: calc(var(--building-width) * var(--building-small-scale));
    --building-small-height: calc(var(--building-height) * var(--building-small-scale));
    --building-header-small-height: calc(62px * var(--building-small-scale));

    --wonder-spritesheet-width: 1845px;
    --wonder-spritesheet-height: 720px;
    --wonder-spritesheet-columns: 5;
    --wonder-spritesheet-rows: 3;
    --wonder-width: calc(var(--wonder-spritesheet-width) / var(--wonder-spritesheet-columns));
    --wonder-height: calc(var(--wonder-spritesheet-height) / var(--wonder-spritesheet-rows));
    --wonder-border-radius: 15px;
    --wonder-small-scale: calc(0.58 * var(--scale));
    --wonder-plus-age-card-scale: 1.12;

    --progress-token-spritesheet-width: 800px;
    --progress-token-spritesheet-height: 600px;
    --progress-token-spritesheet-columns: 4;
    --progress-token-spritesheet-rows: 3;
    --progress-token-width: calc(var(--progress-token-spritesheet-width) / var(--progress-token-spritesheet-columns));
    --progress-token-height: calc(var(--progress-token-spritesheet-height) / var(--progress-token-spritesheet-rows));
    --progress-token-small-scale: calc(0.4 * (0.5 / 0.63) * var(--scale)); /* (0.5 / 0.63) Because board used to be scale 0.63 and now is 0.5 */

    --board-width: 400px;
    --board-height: 1440px;
    --board-scale: calc(0.5 * var(--scale));

    --small-border-radius: 7px;

    --draftpool-column-width: calc(var(--building-width) * var(--building-small-scale) * 0.6);
    --draftpool-row-height: calc(var(--building-height) * var(--building-small-scale) * 0.536);
}

/*
  ____                           _
 / ___| ___ _ __   ___ _ __ __ _| |
| |  _ / _ \ '_ \ / _ \ '__/ _` | |
| |_| |  __/ | | |  __/ | | (_| | |
 \____|\___|_| |_|\___|_|  \__,_|_|
 */

#swd_wrap h3 {
    margin: 0px 0px var(--gutter) 0px;
    font-size: max(12px, 16px * var(--scale));
}

#swd_wrap .whiteblock h3 {
    /* Borrowed from Potion Explosion */
    text-shadow: 1px 1px 1px #FFFFFF;
}

#swd_wrap .whiteblock {
    border-radius: 8px;
    padding: var(--gutter);
    margin: 0px;
}

.coin {
    background-image: url('img/icons.png');
    background-position: -0px -0px;
    width: 30px;
    height: 30px;
    zoom: var(--scale);
    display: inline-block;
}

/*
 _                            _   
| |    __ _ _   _  ___  _   _| |_ 
| |   / _` | | | |/ _ \| | | | __|
| |__| (_| | |_| | (_) | |_| | |_ 
|_____\__,_|\__, |\___/ \__,_|\__|
            |___/                 
 */

#swd_wrap {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

#layout_flexbox {
    /* Use flexbox properties https://www.youtube.com/watch?v=JJSoEo8JSnc */
    display: flex;
    flex-direction: row;
    justify-content: center;
}

#wonder_column {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
}

#wonder_column>div:first-child .player_wonders {
    /* Space between the two player areas with wonders, relevant in square mode where they would otherwise touch. */
    margin-bottom: var(--gutter);
}

.card_outline {
    box-shadow: inset 0px 0px 4px 1px #0000001f;
    border-radius: var(--small-border-radius);
}

.progress_token_outline {
    box-shadow: inset 0px 0px 4px 1px #0000001f;
    border-radius: calc(var(--progress-token-width) * var(--progress-token-small-scale) * 0.5);
}

#wonder_selection_container>div {
    width: calc(var(--wonder-small-scale) * var(--wonder-width));
    height: calc(var(--wonder-small-scale) * var(--wonder-height));
    float: left;
}

#wonder_selection_container>div:nth-of-type(1), #wonder_selection_container>div:nth-of-type(2) {
    margin-bottom: var(--gutter);
}
#wonder_selection_container>div:nth-of-type(1), #wonder_selection_container>div:nth-of-type(3) {
    margin-right: var(--gutter);
}

#middle_column {
    text-align: center;

    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
}

#board_column {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    width: calc(238px * var(--scale));
}

/*
 ____                      _
| __ )  ___   __ _ _ __ __| |
|  _ \ / _ \ / _` | '__/ _` |
| |_) | (_) | (_| | | | (_| |
|____/ \___/ \__,_|_|  \__,_|
 */

#board_container {
    position: relative;
    display: inline-block;
}

.board, #board_container {
    width: calc(var(--board-width) * var(--board-scale));
    height: calc(var(--board-height) * var(--board-scale));
}

.board {
    background-image: url('img/board.png');
    background-size: calc(var(--board-width) * var(--board-scale)) calc(var(--board-height) * var(--board-scale));
    /*border-radius: var(--small-border-radius);*/
    filter: drop-shadow(0px 0px 3px #000000);
    position: absolute;
    display: inline-block;
}

#board_progress_tokens>div {
    position: absolute;
    left: calc(var(--board-width) * var(--board-scale) * 0.65);
    width: 80px;
    height: 80px;
}

#board_progress_tokens>div:nth-of-type(1) {
    top: calc(var(--board-height) * var(--board-scale) * 0.25);
}

#board_progress_tokens>div:nth-of-type(2) {
    top: calc(var(--board-height) * var(--board-scale) * 0.353);
}

#board_progress_tokens>div:nth-of-type(3) {
    top: calc(var(--board-height) * var(--board-scale) * 0.455);
}

#board_progress_tokens>div:nth-of-type(4) {
    top: calc(var(--board-height) * var(--board-scale) * 0.559);
}

#board_progress_tokens>div:nth-of-type(5) {
    top: calc(var(--board-height) * var(--board-scale) * 0.657);
}

.board_player_left, .board_player_right {
    position: relative;
    display: inline-block;
    top: 40px;
}

.board_player_right {
    float: right;
}

/*
 ____             __ _                     _
|  _ \ _ __ __ _ / _| |_ _ __   ___   ___ | |
| | | | '__/ _` | |_| __| '_ \ / _ \ / _ \| |
| |_| | | | (_| |  _| |_| |_) | (_) | (_) | |
|____/|_|  \__,_|_|  \__| .__/ \___/ \___/|_|
                        |_|
 */

#draftpool_container {
    /*flex-grow: 1;*/
}

.draftpool {
    position: relative;
    margin: calc(2 * var(--gutter)) 0px calc(2.5 * var(--gutter)) 0px;

    /* Height is being set by updateDraftpool */

    /* 5px for rightmost card's shadow, else it will look too narrox. */
    width: calc(var(--draftpool-column-width) * 10 + var(--building-small-width) + 5px);
}

.drafpool_building_cost {
    top: calc(var(--building-height) * var(--building-small-scale) * 0.953);
    position: relative;
}
.drafpool_building_cost .coin {
    zoom: calc(0.75 * var(--scale));
}
.drafpool_building_cost span {
    top: 4px;
    position: relative;
    font-weight: bold;
    font-size: 20px;
    text-shadow: 0 0 4px white, 0 0 4px white, 0 0 4px white;
}

.draftpool_actions {
    text-align: center;
    display: none;
}

.column1 { left: calc(var(--draftpool-column-width) * (1 - 1)); }
.column2 { left: calc(var(--draftpool-column-width) * (2 - 1)); }
.column3 { left: calc(var(--draftpool-column-width) * (3 - 1)); }
.column4 { left: calc(var(--draftpool-column-width) * (4 - 1)); }
.column5 { left: calc(var(--draftpool-column-width) * (5 - 1)); }
.column6 { left: calc(var(--draftpool-column-width) * (6 - 1)); }
.column7 { left: calc(var(--draftpool-column-width) * (7 - 1)); }
.column8 { left: calc(var(--draftpool-column-width) * (8 - 1)); }
.column9 { left: calc(var(--draftpool-column-width) * (9 - 1)); }
.column10 { left: calc(var(--draftpool-column-width) * (10 - 1)); }
.column11 { left: calc(var(--draftpool-column-width) * (11 - 1)); }

.row1 { top: calc(var(--draftpool-row-height) * (1 - 1)); }
.row2 { top: calc(var(--draftpool-row-height) * (2 - 1)); }
.row3 { top: calc(var(--draftpool-row-height) * (3 - 1)); }
.row4 { top: calc(var(--draftpool-row-height) * (4 - 1)); }
.row5 { top: calc(var(--draftpool-row-height) * (5 - 1)); }
.row6 { top: calc(var(--draftpool-row-height) * (6 - 1)); }
.row7 { top: calc(var(--draftpool-row-height) * (7 - 1)); }

/*
 ____  _                            _
|  _ \| | __ _ _   _  ___ _ __     / \   _ __ ___  __ _
| |_) | |/ _` | | | |/ _ \ '__|   / _ \ | '__/ _ \/ _` |
|  __/| | (_| | |_| |  __/ |     / ___ \| | |  __/ (_| |
|_|   |_|\__,_|\__, |\___|_|    /_/   \_\_|  \___|\__,_|
               |___/
 */

#swd_wrap.portrait .player_info.opponent {
    border-radius: 0px var(--small-border-radius) 0px 0px;
}
#swd_wrap.portrait .player_info.me {
    border-radius:  0px 0px var(--small-border-radius) 0px;
}
#swd_wrap.square .player_info, #swd_wrap.landscape .player_info {
    border-radius: 0px var(--small-border-radius) var(--small-border-radius) 0px;
}

.player_area_name {
    position: relative;
    display: inline-block;
    width: 65%;
    text-align: center;
}
.player_area_name h3 {
    margin:0px !important;
}

.player_buildings.me {
    align-items: flex-start;
}

.player_buildings {
    min-height: calc(150px * var(--scale));

    width: calc(7 * var(--building-small-width) + 6 * 2px);
    /* Flexbox setup */
    display: flex;
    flex-direction: row;
    align-items: flex-end;
    justify-content: space-between;

    /*flex-grow: 2; !* Make player building div grow more than the draftpool container, so the buildings will be most toward the middle as possible. *!*/
    /*align-self: stretch;*/
}
#swd_wrap.square .player_buildings.opponent, #swd_wrap.landscape .player_buildings.opponent {
    border-radius: 0px 0px var(--small-border-radius) 0px;
}
#swd_wrap.square .player_buildings.me, #swd_wrap.landscape .player_buildings.me {
    border-radius: 0px var(--small-border-radius) 0px 0px;
}
#swd_wrap.portrait .player_buildings.opponent {
    border-radius: 0px 0px var(--small-border-radius) var(--small-border-radius);
}
#swd_wrap.portrait .player_buildings.me {
    border-radius: var(--small-border-radius) var(--small-border-radius) 0px 0px;
}

.player_building_column {
    /*display: inline-block;*/
    min-width: var(--building-small-width);
    min-height: var(--building-header-small-height);
    border-radius: var(--small-border-radius);
    background-size: var(--building-small-width) var(--building-header-small-height) !important;
    background-repeat: no-repeat !important;
    background-position: bottom !important;
    margin: 0px 1px 0px 1px;
}

/* Gradients for opponent */
.player_buildings.opponent .player_building_column.Brown {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#702c12+0,702c12+100&0+0,0.4+100 */
    background: linear-gradient(to bottom, rgba(112, 44, 18, 0) 0%, rgba(112, 44, 18, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.opponent .player_building_column.Grey {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#858680+0,858680+100&0+0,0.4+100 */
    background: linear-gradient(to bottom, rgba(133, 134, 128, 0) 0%, rgba(133, 134, 128, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.opponent .player_building_column.Yellow {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#f8b305+0,f8b305+100&0+0,0.4+100 */
    background: linear-gradient(to bottom, rgba(248, 179, 5, 0) 0%, rgba(248, 179, 5, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.opponent .player_building_column.Blue {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#0275aa+0,0275aa+100&0+0,0.4+100 */
    background: linear-gradient(to bottom, rgba(2, 117, 170, 0) 0%, rgba(2, 117, 170, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.opponent .player_building_column.Red {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#b7110e+0,b7110e+100&0+0,0.4+100 */
    background: linear-gradient(to bottom, rgba(183, 17, 14, 0) 0%, rgba(183, 17, 14, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.opponent .player_building_column.Green {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#027234+0,027234+100&0+0,0.4+100 */
    background: linear-gradient(to bottom, rgba(2, 114, 52, 0) 0%, rgba(2, 114, 52, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.opponent .player_building_column.Purple {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#6f488b+0,6f488b+100&0+0,0.4+100 */
    background: linear-gradient(to bottom, rgba(111, 72, 139, 0) 0%, rgba(111, 72, 139, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

/* Gradients for me */
.player_buildings.me .player_building_column.Brown {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#702c12+0,702c12+100&0+0,0.4+100 */
    background: linear-gradient(to top, rgba(112, 44, 18, 0) 0%, rgba(112, 44, 18, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.me .player_building_column.Grey {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#858680+0,858680+100&0+0,0.4+100 */
    background: linear-gradient(to top, rgba(133, 134, 128, 0) 0%, rgba(133, 134, 128, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.me .player_building_column.Yellow {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#f8b305+0,f8b305+100&0+0,0.4+100 */
    background: linear-gradient(to top, rgba(248, 179, 5, 0) 0%, rgba(248, 179, 5, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.me .player_building_column.Blue {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#0275aa+0,0275aa+100&0+0,0.4+100 */
    background: linear-gradient(to top, rgba(2, 117, 170, 0) 0%, rgba(2, 117, 170, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.me .player_building_column.Red {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#b7110e+0,b7110e+100&0+0,0.4+100 */
    background: linear-gradient(to top, rgba(183, 17, 14, 0) 0%, rgba(183, 17, 14, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.me .player_building_column.Green {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#027234+0,027234+100&0+0,0.4+100 */
    background: linear-gradient(to top, rgba(2, 114, 52, 0) 0%, rgba(2, 114, 52, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}

.player_buildings.me .player_building_column.Purple {
    /* Permalink - use to edit and share this gradient: https://colorzilla.com/gradient-editor/#6f488b+0,6f488b+100&0+0,0.4+100 */
    background: linear-gradient(to top, rgba(111, 72, 139, 0) 0%, rgba(111, 72, 139, 0.4) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
}


#swd_wrap.portrait .player_wonders.opponent {
    border-radius: var(--small-border-radius) var(--small-border-radius) 0px 0px;
}
#swd_wrap.portrait .player_wonders.me {
    border-radius: 0px 0px var(--small-border-radius) var(--small-border-radius);
}
#swd_wrap.square .player_wonders.opponent, #swd_wrap.landscape .player_wonders.opponent {
    border-radius: var(--small-border-radius) 0px var(--small-border-radius) var(--small-border-radius);
}
#swd_wrap.square .player_wonders.me, #swd_wrap.landscape .player_wonders.me {
    border-radius: var(--small-border-radius) var(--small-border-radius) 0px var(--small-border-radius);
}
.player_wonders .wonder_small {
    margin-right: 40px;
    z-index: 2;
    position: absolute;
}
.player_wonders .age_card_container {
    position: relative;
    transform: rotate(-90deg);
    top: calc(-10px * var(--scale));
    left: calc(103px * var(--scale));
    width: var(--building-small-width);
    height: var(--building-small-height);
}
.player_wonders .age_card_container .building_small {
    position: absolute;
}

#swd_wrap.square .player_wonders {
    width: calc(var(--wonder-small-scale) * var(--wonder-width) * var(--wonder-plus-age-card-scale));
    height: calc(4 * var(--wonder-small-scale) * var(--wonder-height) + 3 * var(--gutter));
}
#swd_wrap.landscape .player_wonders {
    width: calc(2 * var(--wonder-small-scale) * var(--wonder-width) * var(--wonder-plus-age-card-scale) + 1 * var(--gutter));
    height: calc(2 * var(--wonder-small-scale) * var(--wonder-height) + 1 * var(--gutter));
}
#swd_wrap.portrait .player_wonders {
    min-width: calc(4 * var(--wonder-small-scale) * var(--wonder-width) * var(--wonder-plus-age-card-scale) + 3 * var(--gutter));
    height: calc(var(--wonder-small-scale) * var(--wonder-height));
}

.player_wonders {
    position: relative;

    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    justify-content: space-between;
}

.player_wonders > div {
    width: calc(var(--wonder-small-scale) * var(--wonder-width));
    height: calc(var(--wonder-small-scale) * var(--wonder-height));
}

.player_area_progress_tokens {
    display: inline-block;
    vertical-align: top;
    text-align: center;
    position: relative;
}
.player_area_progress_tokens>div {
    display: inline-block;
    width: calc(var(--progress-token-width) * var(--progress-token-small-scale));
    height: calc(var(--progress-token-height) * var(--progress-token-small-scale));
}
.player_area_progress_tokens>div:nth-of-type(4), .player_area_progress_tokens>div:nth-of-type(5) {
    position: relative;
    top:-8px;
    display: none;
}

.player_area_coins {
    float: right;
    text-align: center;

    width: calc(var(--scale) * 30px);
    height: calc(var(--scale) * 30px);
}
.player_area_coins span {
    top: 4px;
    position: relative;
    font-weight: bold;
    font-size: 18px;
    text-shadow: 0 0 4px white, 0 0 4px white, 0 0 4px white;
}

/*
 ____  _                            _        _   _
|  _ \| | __ _ _   _  ___ _ __     / \   ___| |_(_) ___  _ __  ___
| |_) | |/ _` | | | |/ _ \ '__|   / _ \ / __| __| |/ _ \| '_ \/ __|
|  __/| | (_| | |_| |  __/ |     / ___ \ (__| |_| | (_) | | | \__ \
|_|   |_|\__,_|\__, |\___|_|    /_/   \_\___|\__|_|\___/|_| |_|___/
               |___/
 */

.action_construct {
    background-image: url(img/icons.png);
    background-position: -0px -170px;
    width: 60px;
    height: 44px;
}

.action_wonder {
    background-image: url(img/icons.png);
    background-position: -60px -170px;
    width: 60px;
    height: 41px;
}

.action_discard {
    background-image: url(img/icons.png);
    background-position: -120px -170px;
    width: 40px;
    height: 40px;
}

.action_button * {
    display: inline-block;
    vertical-align: middle;
    overflow-wrap: normal;
}

/*
 ____        _ _     _ _
| __ ) _   _(_) | __| (_)_ __   __ _ ___
|  _ \| | | | | |/ _` | | '_ \ / _` / __|
| |_) | |_| | | | (_| | | | | | (_| \__ \
|____/ \__,_|_|_|\__,_|_|_| |_|\__, |___/
                               |___/
 */

.building {
    width: var(--building-width);
    height: var(--building-height);
    background-image: url('img/buildings.jpg');
    border-radius: 14px;
    box-shadow:
        5px 5px 5px 0px rgba(0,0,0,0.4),
        inset 0px 0px 0px 1px #00000060;

    /* Temporary?: */
    display: inline-block;
    position: inherit;
}

.building_header_small {
    width: var(--building-small-width);
    height: var(--building-header-small-height);
    background-size: calc(var(--building-spritesheet-width) * var(--building-small-scale)) calc(var(--building-spritesheet-height) * var(--building-small-scale));
    border-radius: var(--small-border-radius);
    box-shadow:
        3px 3px 3px 0px rgba(0,0,0,0.4),
        inset 0px 0px 0px 0.5px #00000060;
    cursor: pointer;
    display: block;
}

.building_small.available {
    cursor: pointer;
}

.building_small {
    width: var(--building-small-width);
    height: var(--building-small-height);
    background-size: calc(var(--building-spritesheet-width) * var(--building-small-scale)) calc(var(--building-spritesheet-height) * var(--building-small-scale));
    border-radius: var(--small-border-radius);
    box-shadow:
        0px 0px 3px 3px rgba(0,0,0,0.4),
        inset 0px 0px 0px 0.5px #00000060;
    text-align: center;
}

.age1_back { background-position: -300% -700%; }
.age2_back { background-position: -400% -700%; }
.age3_back { background-position: -500% -700%; }
.guild_back { background-position: -600% -700%; }

/*
__        __              _
\ \      / /__  _ __   __| | ___ _ __ ___
 \ \ /\ / / _ \| '_ \ / _` |/ _ \ '__/ __|
  \ V  V / (_) | | | | (_| |  __/ |  \__ \
   \_/\_/ \___/|_| |_|\__,_|\___|_|  |___/
 */

.wonder {
    width: var(--wonder-width);
    height: var(--wonder-height);
    background-image: url('img/wonders.jpg');
    position: absolute;
    cursor: pointer;
    border-radius: var(--wonder-border-radius);
    box-shadow:
        5px 5px 5px 0px rgba(0,0,0,0.4),
        inset 0px 0px 0px 1px #00000060;

    /* Temporary: */
    display: inline-block;
    position: inherit;
}

.wonder_small {
    width: calc(var(--wonder-width) * var(--wonder-small-scale));
    height: calc(var(--wonder-height) * var(--wonder-small-scale));
    background-size: calc(var(--wonder-spritesheet-width) * var(--wonder-small-scale)) calc(var(--wonder-spritesheet-height) * var(--wonder-small-scale));
    border-radius: var(--small-border-radius);
    box-shadow:
        3px 3px 3px 0px rgba(0,0,0,0.4),
        inset 0px 0px 0px 0.5px #00000060;
}

/*
 ____                                      _____     _
|  _ \ _ __ ___   __ _ _ __ ___  ___ ___  |_   _|__ | | _____ _ __  ___
| |_) | '__/ _ \ / _` | '__/ _ \/ __/ __|   | |/ _ \| |/ / _ \ '_ \/ __|
|  __/| | | (_) | (_| | | |  __/\__ \__ \   | | (_) |   <  __/ | | \__ \
|_|   |_|  \___/ \__, |_|  \___||___/___/   |_|\___/|_|\_\___|_| |_|___/
                 |___/
 */

.progress_token {
    width: var(--progress-token-width);
    height: var(--progress-token-height);
    background-image: url('img/progress_tokens.jpg');
    position: absolute;
    cursor: pointer;
    border-radius: calc(var(--progress-token-width) * 0.5);
    box-shadow:
        5px 5px 5px 0px rgba(0,0,0,0.4),
        inset 0px 0px 0px 1px #00000060;

    /* Temporary: */
    display: inline-block;
    position: inherit;
}

.progress_token_small {
    width: calc(var(--progress-token-width) * var(--progress-token-small-scale));
    height: calc(var(--progress-token-height) * var(--progress-token-small-scale));
    background-size: calc(var(--progress-token-spritesheet-width) * var(--progress-token-small-scale)) calc(var(--progress-token-spritesheet-height) * var(--progress-token-small-scale));
    border-radius: calc(var(--progress-token-width) * var(--progress-token-small-scale) * 0.5);
    box-shadow:
        3px 3px 3px 0px rgba(0,0,0,0.4),
        inset 0px 0px 0px 0.5px #00000060;
}